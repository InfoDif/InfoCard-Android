android.support.v4.app.BackStackState
android.support.v4.app.BackStackState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.Fragment$SavedState
android.support.v4.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentActivity
android.support.v4.app.FragmentManagerState
android.support.v4.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentState
android.support.v4.app.FragmentState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentTabHost
android.support.v4.app.FragmentTabHost: FragmentTabHost(android.content.Context,android.util.AttributeSet)
android.support.v4.app.FragmentTabHost$SavedState
android.support.v4.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.content.FileProvider
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String)
android.support.v4.content.WakefulBroadcastReceiver
android.support.v4.view.PagerTabStrip
android.support.v4.view.PagerTabStrip: PagerTabStrip(android.content.Context,android.util.AttributeSet)
android.support.v4.view.PagerTitleStrip
android.support.v4.view.PagerTitleStrip: PagerTitleStrip(android.content.Context,android.util.AttributeSet)
android.support.v4.view.ViewPager
android.support.v4.view.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
android.support.v4.view.ViewPager$LayoutParams
android.support.v4.view.ViewPager$LayoutParams: ViewPager$LayoutParams(android.content.Context,android.util.AttributeSet)
android.support.v4.view.ViewPager$SavedState
android.support.v4.view.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.ContentLoadingProgressBar
android.support.v4.widget.ContentLoadingProgressBar: ContentLoadingProgressBar(android.content.Context,android.util.AttributeSet)
android.support.v4.widget.DrawerLayout
android.support.v4.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet,int)
android.support.v4.widget.DrawerLayout$LayoutParams
android.support.v4.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
android.support.v4.widget.DrawerLayout$SavedState
android.support.v4.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.SlidingPaneLayout
android.support.v4.widget.SlidingPaneLayout: SlidingPaneLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.widget.SlidingPaneLayout: SlidingPaneLayout(android.content.Context,android.util.AttributeSet,int)
android.support.v4.widget.SlidingPaneLayout$LayoutParams
android.support.v4.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
android.support.v4.widget.SlidingPaneLayout$SavedState
android.support.v4.widget.SlidingPaneLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.infodif.infocard.CreditCardInfo
com.infodif.infocard.CreditCardInfo: java.lang.String cardNumber
com.infodif.infocard.CreditCardInfo: java.lang.String expiryMonth
com.infodif.infocard.CreditCardInfo: java.lang.String expiryYear
com.infodif.infocard.CreditCardInfo: java.lang.String cvv
com.infodif.infocard.CreditCardInfo: com.infodif.infocard.CreditCardType cardType
com.infodif.infocard.CreditCardInfo: boolean initialized
com.infodif.infocard.CreditCardInfo: android.os.Parcelable$Creator CREATOR
com.infodif.infocard.CreditCardInfo: void <clinit>()
com.infodif.infocard.CreditCardInfo: CreditCardInfo()
com.infodif.infocard.CreditCardInfo: void init()
com.infodif.infocard.CreditCardInfo: CreditCardInfo(android.os.Parcel)
com.infodif.infocard.CreditCardInfo: java.lang.String getCardNumber()
com.infodif.infocard.CreditCardInfo: void setCardNumber(java.lang.String)
com.infodif.infocard.CreditCardInfo: java.lang.String getExpiryMonth()
com.infodif.infocard.CreditCardInfo: void setExpiryMonth(java.lang.String)
com.infodif.infocard.CreditCardInfo: java.lang.String getExpiryYear()
com.infodif.infocard.CreditCardInfo: void setExpiryYear(java.lang.String)
com.infodif.infocard.CreditCardInfo: java.lang.String getCvv()
com.infodif.infocard.CreditCardInfo: void setCvv(java.lang.String)
com.infodif.infocard.CreditCardInfo: com.infodif.infocard.CreditCardType getCardType()
com.infodif.infocard.CreditCardInfo: void setCardType(com.infodif.infocard.CreditCardType)
com.infodif.infocard.CreditCardInfo: int describeContents()
com.infodif.infocard.CreditCardInfo: void writeToParcel(android.os.Parcel,int)
com.infodif.infocard.CreditCardInfo$1: CreditCardInfo$1()
com.infodif.infocard.CreditCardInfo$1: com.infodif.infocard.CreditCardInfo createFromParcel(android.os.Parcel)
com.infodif.infocard.CreditCardInfo$1: com.infodif.infocard.CreditCardInfo[] newArray(int)
com.infodif.infocard.CreditCardInfo$1: java.lang.Object createFromParcel(android.os.Parcel)
com.infodif.infocard.CreditCardInfo$1: java.lang.Object[] newArray(int)
com.infodif.infocard.CreditCardType: com.infodif.infocard.CreditCardType CreditCardTypeUnknown
com.infodif.infocard.CreditCardType: com.infodif.infocard.CreditCardType CreditCardTypeVisa
com.infodif.infocard.CreditCardType: com.infodif.infocard.CreditCardType CreditCardTypeMastercard
com.infodif.infocard.CreditCardType: int value
com.infodif.infocard.CreditCardType: com.infodif.infocard.CreditCardType[] ENUM$VALUES
com.infodif.infocard.CreditCardType: void <clinit>()
com.infodif.infocard.CreditCardType: CreditCardType(java.lang.String,int,int)
com.infodif.infocard.CreditCardType: com.infodif.infocard.CreditCardType[] values()
com.infodif.infocard.CreditCardType: com.infodif.infocard.CreditCardType valueOf(java.lang.String)
com.infodif.infocard.InfoCardActivity
com.infodif.infocard.InfoCardActivity: java.lang.String TAG
com.infodif.infocard.InfoCardActivity: int DEVICE_ORIENTATION_PORTRAIT
com.infodif.infocard.InfoCardActivity: int DEVICE_ORIENTATION_LANDSCAPE_RIGHT
com.infodif.infocard.InfoCardActivity: int DEVICE_ORIENTATION_PORTRAIT_UPSIDE_DOWN
com.infodif.infocard.InfoCardActivity: int DEVICE_ORIENTATION_LANDSCAPE_LEFT
com.infodif.infocard.InfoCardActivity: org.opencv.core.Mat mRgba
com.infodif.infocard.InfoCardActivity: android.widget.TextView mTextView
com.infodif.infocard.InfoCardActivity: org.opencv.android.CameraBridgeViewBase mOpenCvCameraView
com.infodif.infocard.InfoCardActivity: int mDeviceOrientation
com.infodif.infocard.InfoCardActivity: android.graphics.Rect mMaskRectangle
com.infodif.infocard.InfoCardActivity: int mViewHeight
com.infodif.infocard.InfoCardActivity: int mViewWidth
com.infodif.infocard.InfoCardActivity: boolean mScanFrontSide
com.infodif.infocard.InfoCardActivity: boolean mCardOCRForFirstTime
com.infodif.infocard.InfoCardActivity: boolean mStopOcrThread
com.infodif.infocard.InfoCardActivity: boolean mFrameReady
com.infodif.infocard.InfoCardActivity: java.lang.Thread mOcrThread
com.infodif.infocard.InfoCardActivity: java.util.concurrent.Semaphore mOcrAvailable
com.infodif.infocard.InfoCardActivity: int INFOCARD_STATE_SEARCHING_FOR_CARD
com.infodif.infocard.InfoCardActivity: int INFOCARD_STATE_WAITING_FOR_FOCUS
com.infodif.infocard.InfoCardActivity: int INFOCARD_STATE_PERFORMING_OCR
com.infodif.infocard.InfoCardActivity: int mInfoCardState
com.infodif.infocard.InfoCardActivity: long mNativeObjCardOCR
com.infodif.infocard.InfoCardActivity: java.util.Vector mOcrResultsForFrames
com.infodif.infocard.InfoCardActivity: int interval
com.infodif.infocard.InfoCardActivity: java.lang.String INFOCARD_SCAN_RESULT
com.infodif.infocard.InfoCardActivity: java.lang.String INFOCARD_BLURRED_CARD_IMAGE
com.infodif.infocard.InfoCardActivity: java.lang.String INFOCARD_OPTION_SCAN_CARD_FRONTSIDE
com.infodif.infocard.InfoCardActivity: java.lang.String INFOCARD_OPTION_GUIDE_MESSAGE
com.infodif.infocard.InfoCardActivity: android.graphics.Bitmap mBlurredCardImage
com.infodif.infocard.InfoCardActivity: com.infodif.infocard.CreditCardInfo mCardInfo
com.infodif.infocard.InfoCardActivity: android.os.Handler handler
com.infodif.infocard.InfoCardActivity: java.lang.Runnable runnable
com.infodif.infocard.InfoCardActivity: com.infodif.infocard.InfoCardActivity$MaskRectView mMaskRectView
com.infodif.infocard.InfoCardActivity: com.infodif.infocard.InfoCardActivity$MyOrientationListener mOrientationListener
com.infodif.infocard.InfoCardActivity: org.opencv.android.BaseLoaderCallback mLoaderCallback
com.infodif.infocard.InfoCardActivity: void <clinit>()
com.infodif.infocard.InfoCardActivity: long nativeCardOCR()
com.infodif.infocard.InfoCardActivity: void nativeDeleteCardOCR(long)
com.infodif.infocard.InfoCardActivity: int nativeOnProcessFrame(long,long,boolean,boolean,java.util.Vector)
com.infodif.infocard.InfoCardActivity: long nativeGetBlurredCardImageAddr(long)
com.infodif.infocard.InfoCardActivity: com.infodif.infocard.CreditCardInfo getCardInfo()
com.infodif.infocard.InfoCardActivity: int getResourceIdByName(java.lang.String,java.lang.String,java.lang.String)
com.infodif.infocard.InfoCardActivity: InfoCardActivity()
com.infodif.infocard.InfoCardActivity: void onCreate(android.os.Bundle)
com.infodif.infocard.InfoCardActivity: boolean onCreateOptionsMenu(android.view.Menu)
com.infodif.infocard.InfoCardActivity: void onPause()
com.infodif.infocard.InfoCardActivity: void onResume()
com.infodif.infocard.InfoCardActivity: void onDestroy()
com.infodif.infocard.InfoCardActivity: void onCameraViewStarted(int,int)
com.infodif.infocard.InfoCardActivity: void onCameraViewStopped()
com.infodif.infocard.InfoCardActivity: boolean onOptionsItemSelected(android.view.MenuItem)
com.infodif.infocard.InfoCardActivity: void onConfigurationChanged(android.content.res.Configuration)
com.infodif.infocard.InfoCardActivity: org.opencv.core.Mat onCameraFrame(org.opencv.android.CameraBridgeViewBase$CvCameraViewFrame)
com.infodif.infocard.InfoCardActivity: void access$0(com.infodif.infocard.InfoCardActivity,boolean)
com.infodif.infocard.InfoCardActivity: java.util.concurrent.Semaphore access$1(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: com.infodif.infocard.CreditCardInfo access$2(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: java.util.Vector access$3(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: boolean access$4(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: android.graphics.Bitmap access$5(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: org.opencv.android.CameraBridgeViewBase access$6(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: com.infodif.infocard.InfoCardActivity$MaskRectView access$7(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: android.widget.TextView access$8(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: android.graphics.Rect access$9(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: int access$10(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: int access$11(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: void access$12(com.infodif.infocard.InfoCardActivity,int)
com.infodif.infocard.InfoCardActivity: void access$13(com.infodif.infocard.InfoCardActivity,int)
com.infodif.infocard.InfoCardActivity: void access$14(com.infodif.infocard.InfoCardActivity,android.graphics.Rect)
com.infodif.infocard.InfoCardActivity: int access$15(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: void access$16(com.infodif.infocard.InfoCardActivity,int)
com.infodif.infocard.InfoCardActivity: boolean access$17(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: boolean access$18(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: int access$19(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: void access$20(com.infodif.infocard.InfoCardActivity,int)
com.infodif.infocard.InfoCardActivity: org.opencv.core.Mat access$21(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: long access$22(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: int access$23(com.infodif.infocard.InfoCardActivity,long,long,boolean,boolean,java.util.Vector)
com.infodif.infocard.InfoCardActivity: long access$24(long)
com.infodif.infocard.InfoCardActivity: void access$25(com.infodif.infocard.InfoCardActivity,android.graphics.Bitmap)
com.infodif.infocard.InfoCardActivity: boolean access$26(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: void access$27(com.infodif.infocard.InfoCardActivity,boolean)
com.infodif.infocard.InfoCardActivity: android.os.Handler access$28(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity: java.lang.Runnable access$29(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity$1: com.infodif.infocard.InfoCardActivity this$0
com.infodif.infocard.InfoCardActivity$1: InfoCardActivity$1(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity$1: void run()
com.infodif.infocard.InfoCardActivity$2: com.infodif.infocard.InfoCardActivity this$0
com.infodif.infocard.InfoCardActivity$2: InfoCardActivity$2(com.infodif.infocard.InfoCardActivity,android.content.Context)
com.infodif.infocard.InfoCardActivity$2: void onManagerConnected(int)
com.infodif.infocard.InfoCardActivity$DigitOCR: int[] occurenceCount
com.infodif.infocard.InfoCardActivity$DigitOCR: double[] totalScore
com.infodif.infocard.InfoCardActivity$DigitOCR: double maxTotalScore
com.infodif.infocard.InfoCardActivity$DigitOCR: int maxTotalScoreDigit
com.infodif.infocard.InfoCardActivity$DigitOCR: double maxScore
com.infodif.infocard.InfoCardActivity$DigitOCR: int maxScoreDigit
com.infodif.infocard.InfoCardActivity$DigitOCR: int maxOccurence
com.infodif.infocard.InfoCardActivity$DigitOCR: com.infodif.infocard.InfoCardActivity this$0
com.infodif.infocard.InfoCardActivity$DigitOCR: InfoCardActivity$DigitOCR(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity$DigitOCR: void computeTotalStatistics()
com.infodif.infocard.InfoCardActivity$DigitOCR: int getMostFrequentDigit()
com.infodif.infocard.InfoCardActivity$DigitOCR: InfoCardActivity$DigitOCR(com.infodif.infocard.InfoCardActivity,com.infodif.infocard.InfoCardActivity$DigitOCR)
com.infodif.infocard.InfoCardActivity$DigitOCR: void access$1(com.infodif.infocard.InfoCardActivity$DigitOCR)
com.infodif.infocard.InfoCardActivity$DigitOCR: int access$2(com.infodif.infocard.InfoCardActivity$DigitOCR)
com.infodif.infocard.InfoCardActivity$MaskRectView: boolean cardFound
com.infodif.infocard.InfoCardActivity$MaskRectView: com.infodif.infocard.InfoCardActivity this$0
com.infodif.infocard.InfoCardActivity$MaskRectView: InfoCardActivity$MaskRectView(com.infodif.infocard.InfoCardActivity,android.content.Context)
com.infodif.infocard.InfoCardActivity$MaskRectView: void onDraw(android.graphics.Canvas)
com.infodif.infocard.InfoCardActivity$MaskRectView: void onSizeChanged(int,int,int,int)
com.infodif.infocard.InfoCardActivity$MaskRectView: void updateCardStatus(boolean)
com.infodif.infocard.InfoCardActivity$MaskRectView: void adjustMaskRectangle()
com.infodif.infocard.InfoCardActivity$MaskRectView: boolean access$0(com.infodif.infocard.InfoCardActivity$MaskRectView)
com.infodif.infocard.InfoCardActivity$MyOrientationListener: com.infodif.infocard.InfoCardActivity this$0
com.infodif.infocard.InfoCardActivity$MyOrientationListener: InfoCardActivity$MyOrientationListener(com.infodif.infocard.InfoCardActivity,android.content.Context)
com.infodif.infocard.InfoCardActivity$MyOrientationListener: InfoCardActivity$MyOrientationListener(com.infodif.infocard.InfoCardActivity,android.content.Context,int)
com.infodif.infocard.InfoCardActivity$MyOrientationListener: void onOrientationChanged(int)
com.infodif.infocard.InfoCardActivity$OCRResult: int maxScoreNumber
com.infodif.infocard.InfoCardActivity$OCRResult: double[] scoreList
com.infodif.infocard.InfoCardActivity$OCRResult: com.infodif.infocard.InfoCardActivity this$0
com.infodif.infocard.InfoCardActivity$OCRResult: InfoCardActivity$OCRResult(com.infodif.infocard.InfoCardActivity,int)
com.infodif.infocard.InfoCardActivity$OCRResult: int getMaxScoreNumber()
com.infodif.infocard.InfoCardActivity$OCRResult: void setMaxScoreNumber(int)
com.infodif.infocard.InfoCardActivity$OCRResult: double[] getScoreList()
com.infodif.infocard.InfoCardActivity$OCRResult: void initScoreList(int)
com.infodif.infocard.InfoCardActivity$OCRWorker: com.infodif.infocard.InfoCardActivity this$0
com.infodif.infocard.InfoCardActivity$OCRWorker: InfoCardActivity$OCRWorker(com.infodif.infocard.InfoCardActivity)
com.infodif.infocard.InfoCardActivity$OCRWorker: void run()
com.infodif.infocard.InfoCardActivity$OCRWorker: InfoCardActivity$OCRWorker(com.infodif.infocard.InfoCardActivity,com.infodif.infocard.InfoCardActivity$OCRWorker)
com.infodif.infocard.InfoCardActivity$ViewStatusUpdater: boolean newStatus
com.infodif.infocard.InfoCardActivity$ViewStatusUpdater: com.infodif.infocard.InfoCardActivity this$0
com.infodif.infocard.InfoCardActivity$ViewStatusUpdater: InfoCardActivity$ViewStatusUpdater(com.infodif.infocard.InfoCardActivity,boolean)
com.infodif.infocard.InfoCardActivity$ViewStatusUpdater: void run()
org.my.scanExample.MyScanActivity
org.my.scanExample.MyScanActivity: MyScanActivity()
org.my.scanExample.MyScanActivity: void onScanPress(android.view.View)
org.opencv.android.BaseLoaderCallback: android.content.Context mAppContext
org.opencv.android.BaseLoaderCallback: java.lang.String TAG
org.opencv.android.BaseLoaderCallback: BaseLoaderCallback(android.content.Context)
org.opencv.android.BaseLoaderCallback: void onManagerConnected(int)
org.opencv.android.BaseLoaderCallback: void onPackageInstall(int,org.opencv.android.InstallCallbackInterface)
org.opencv.android.BaseLoaderCallback: void finish()
org.opencv.android.CameraBridgeViewBase
org.opencv.android.CameraBridgeViewBase: CameraBridgeViewBase(android.content.Context,android.util.AttributeSet)
org.opencv.android.JavaCameraView
org.opencv.android.JavaCameraView: JavaCameraView(android.content.Context,android.util.AttributeSet)
org.opencv.android.NativeCameraView
org.opencv.android.NativeCameraView: NativeCameraView(android.content.Context,android.util.AttributeSet)
org.opencv.android.StaticHelper
org.opencv.android.StaticHelper: java.lang.String getLibraryList()
org.opencv.android.Utils
org.opencv.android.Utils: void nBitmapToMat2(android.graphics.Bitmap,long,boolean)
org.opencv.android.Utils: void nMatToBitmap2(long,android.graphics.Bitmap,boolean)
org.opencv.calib3d.Calib3d
org.opencv.calib3d.Calib3d: double[] RQDecomp3x3_0(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: double[] RQDecomp3x3_1(long,long,long)
org.opencv.calib3d.Calib3d: void Rodrigues_0(long,long,long)
org.opencv.calib3d.Calib3d: void Rodrigues_1(long,long)
org.opencv.calib3d.Calib3d: double calibrateCamera_0(long,long,double,double,long,long,long,long,int,int,int,double)
org.opencv.calib3d.Calib3d: double calibrateCamera_1(long,long,double,double,long,long,long,long,int)
org.opencv.calib3d.Calib3d: double calibrateCamera_2(long,long,double,double,long,long,long,long)
org.opencv.calib3d.Calib3d: void calibrationMatrixValues_0(long,double,double,double,double,double[],double[],double[],double[],double[])
org.opencv.calib3d.Calib3d: void composeRT_0(long,long,long,long,long,long,long,long,long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void composeRT_1(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void computeCorrespondEpilines_0(long,int,long,long)
org.opencv.calib3d.Calib3d: void convertPointsFromHomogeneous_0(long,long)
org.opencv.calib3d.Calib3d: void convertPointsToHomogeneous_0(long,long)
org.opencv.calib3d.Calib3d: void correctMatches_0(long,long,long,long,long)
org.opencv.calib3d.Calib3d: void decomposeProjectionMatrix_0(long,long,long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void decomposeProjectionMatrix_1(long,long,long,long)
org.opencv.calib3d.Calib3d: void drawChessboardCorners_0(long,double,double,long,boolean)
org.opencv.calib3d.Calib3d: int estimateAffine3D_0(long,long,long,long,double,double)
org.opencv.calib3d.Calib3d: int estimateAffine3D_1(long,long,long,long)
org.opencv.calib3d.Calib3d: void filterSpeckles_0(long,double,int,double,long)
org.opencv.calib3d.Calib3d: void filterSpeckles_1(long,double,int,double)
org.opencv.calib3d.Calib3d: boolean findChessboardCorners_0(long,double,double,long,int)
org.opencv.calib3d.Calib3d: boolean findChessboardCorners_1(long,double,double,long)
org.opencv.calib3d.Calib3d: boolean findCirclesGridDefault_0(long,double,double,long,int)
org.opencv.calib3d.Calib3d: boolean findCirclesGridDefault_1(long,double,double,long)
org.opencv.calib3d.Calib3d: long findFundamentalMat_0(long,long,int,double,double,long)
org.opencv.calib3d.Calib3d: long findFundamentalMat_1(long,long,int,double,double)
org.opencv.calib3d.Calib3d: long findFundamentalMat_2(long,long)
org.opencv.calib3d.Calib3d: long findHomography_0(long,long,int,double,long)
org.opencv.calib3d.Calib3d: long findHomography_1(long,long,int,double)
org.opencv.calib3d.Calib3d: long findHomography_2(long,long)
org.opencv.calib3d.Calib3d: long getOptimalNewCameraMatrix_0(long,long,double,double,double,double,double,double[],boolean)
org.opencv.calib3d.Calib3d: long getOptimalNewCameraMatrix_1(long,long,double,double,double)
org.opencv.calib3d.Calib3d: double[] getValidDisparityROI_0(int,int,int,int,int,int,int,int,int,int,int)
org.opencv.calib3d.Calib3d: long initCameraMatrix2D_0(long,long,double,double,double)
org.opencv.calib3d.Calib3d: long initCameraMatrix2D_1(long,long,double,double)
org.opencv.calib3d.Calib3d: void matMulDeriv_0(long,long,long,long)
org.opencv.calib3d.Calib3d: void projectPoints_0(long,long,long,long,long,long,long,double)
org.opencv.calib3d.Calib3d: void projectPoints_1(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: float rectify3Collinear_0(long,long,long,long,long,long,long,long,double,double,long,long,long,long,long,long,long,long,long,long,long,double,double,double,double[],double[],int)
org.opencv.calib3d.Calib3d: void reprojectImageTo3D_0(long,long,long,boolean,int)
org.opencv.calib3d.Calib3d: void reprojectImageTo3D_1(long,long,long,boolean)
org.opencv.calib3d.Calib3d: void reprojectImageTo3D_2(long,long,long)
org.opencv.calib3d.Calib3d: boolean solvePnP_0(long,long,long,long,long,long,boolean,int)
org.opencv.calib3d.Calib3d: boolean solvePnP_1(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: void solvePnPRansac_0(long,long,long,long,long,long,boolean,int,float,int,long,int)
org.opencv.calib3d.Calib3d: void solvePnPRansac_1(long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: double stereoCalibrate_0(long,long,long,long,long,long,long,double,double,long,long,long,long,int,int,double,int)
org.opencv.calib3d.Calib3d: double stereoCalibrate_1(long,long,long,long,long,long,long,double,double,long,long,long,long)
org.opencv.calib3d.Calib3d: void stereoRectify_0(long,long,long,long,double,double,long,long,long,long,long,long,long,int,double,double,double,double[],double[])
org.opencv.calib3d.Calib3d: void stereoRectify_1(long,long,long,long,double,double,long,long,long,long,long,long,long)
org.opencv.calib3d.Calib3d: boolean stereoRectifyUncalibrated_0(long,long,long,double,double,long,long,double)
org.opencv.calib3d.Calib3d: boolean stereoRectifyUncalibrated_1(long,long,long,double,double,long,long)
org.opencv.calib3d.Calib3d: void triangulatePoints_0(long,long,long,long,long)
org.opencv.calib3d.Calib3d: void validateDisparity_0(long,long,int,int,int)
org.opencv.calib3d.Calib3d: void validateDisparity_1(long,long,int,int)
org.opencv.calib3d.StereoBM
org.opencv.calib3d.StereoBM: long StereoBM_0()
org.opencv.calib3d.StereoBM: long StereoBM_1(int,int,int)
org.opencv.calib3d.StereoBM: long StereoBM_2(int)
org.opencv.calib3d.StereoBM: void compute_0(long,long,long,long,int)
org.opencv.calib3d.StereoBM: void compute_1(long,long,long,long)
org.opencv.calib3d.StereoBM: void delete(long)
org.opencv.calib3d.StereoSGBM
org.opencv.calib3d.StereoSGBM: long StereoSGBM_0()
org.opencv.calib3d.StereoSGBM: long StereoSGBM_1(int,int,int,int,int,int,int,int,int,int,boolean)
org.opencv.calib3d.StereoSGBM: long StereoSGBM_2(int,int,int)
org.opencv.calib3d.StereoSGBM: void compute_0(long,long,long,long)
org.opencv.calib3d.StereoSGBM: int get_minDisparity_0(long)
org.opencv.calib3d.StereoSGBM: void set_minDisparity_0(long,int)
org.opencv.calib3d.StereoSGBM: int get_numberOfDisparities_0(long)
org.opencv.calib3d.StereoSGBM: void set_numberOfDisparities_0(long,int)
org.opencv.calib3d.StereoSGBM: int get_SADWindowSize_0(long)
org.opencv.calib3d.StereoSGBM: void set_SADWindowSize_0(long,int)
org.opencv.calib3d.StereoSGBM: int get_preFilterCap_0(long)
org.opencv.calib3d.StereoSGBM: void set_preFilterCap_0(long,int)
org.opencv.calib3d.StereoSGBM: int get_uniquenessRatio_0(long)
org.opencv.calib3d.StereoSGBM: void set_uniquenessRatio_0(long,int)
org.opencv.calib3d.StereoSGBM: int get_P1_0(long)
org.opencv.calib3d.StereoSGBM: void set_P1_0(long,int)
org.opencv.calib3d.StereoSGBM: int get_P2_0(long)
org.opencv.calib3d.StereoSGBM: void set_P2_0(long,int)
org.opencv.calib3d.StereoSGBM: int get_speckleWindowSize_0(long)
org.opencv.calib3d.StereoSGBM: void set_speckleWindowSize_0(long,int)
org.opencv.calib3d.StereoSGBM: int get_speckleRange_0(long)
org.opencv.calib3d.StereoSGBM: void set_speckleRange_0(long,int)
org.opencv.calib3d.StereoSGBM: int get_disp12MaxDiff_0(long)
org.opencv.calib3d.StereoSGBM: void set_disp12MaxDiff_0(long,int)
org.opencv.calib3d.StereoSGBM: boolean get_fullDP_0(long)
org.opencv.calib3d.StereoSGBM: void set_fullDP_0(long,boolean)
org.opencv.calib3d.StereoSGBM: void delete(long)
org.opencv.contrib.Contrib
org.opencv.contrib.Contrib: void applyColorMap_0(long,long,int)
org.opencv.contrib.Contrib: int chamerMatching_0(long,long,long,long,double,int,double,int,int,int,double,double,double,double)
org.opencv.contrib.Contrib: int chamerMatching_1(long,long,long,long)
org.opencv.contrib.FaceRecognizer
org.opencv.contrib.FaceRecognizer: void load_0(long,java.lang.String)
org.opencv.contrib.FaceRecognizer: void predict_0(long,long,double[],double[])
org.opencv.contrib.FaceRecognizer: void save_0(long,java.lang.String)
org.opencv.contrib.FaceRecognizer: void train_0(long,long,long)
org.opencv.contrib.FaceRecognizer: void update_0(long,long,long)
org.opencv.contrib.FaceRecognizer: void delete(long)
org.opencv.contrib.StereoVar
org.opencv.contrib.StereoVar: long StereoVar_0()
org.opencv.contrib.StereoVar: long StereoVar_1(int,double,int,int,int,int,double,float,float,int,int,int)
org.opencv.contrib.StereoVar: void compute_0(long,long,long,long)
org.opencv.contrib.StereoVar: int get_levels_0(long)
org.opencv.contrib.StereoVar: void set_levels_0(long,int)
org.opencv.contrib.StereoVar: double get_pyrScale_0(long)
org.opencv.contrib.StereoVar: void set_pyrScale_0(long,double)
org.opencv.contrib.StereoVar: int get_nIt_0(long)
org.opencv.contrib.StereoVar: void set_nIt_0(long,int)
org.opencv.contrib.StereoVar: int get_minDisp_0(long)
org.opencv.contrib.StereoVar: void set_minDisp_0(long,int)
org.opencv.contrib.StereoVar: int get_maxDisp_0(long)
org.opencv.contrib.StereoVar: void set_maxDisp_0(long,int)
org.opencv.contrib.StereoVar: int get_poly_n_0(long)
org.opencv.contrib.StereoVar: void set_poly_n_0(long,int)
org.opencv.contrib.StereoVar: double get_poly_sigma_0(long)
org.opencv.contrib.StereoVar: void set_poly_sigma_0(long,double)
org.opencv.contrib.StereoVar: float get_fi_0(long)
org.opencv.contrib.StereoVar: void set_fi_0(long,float)
org.opencv.contrib.StereoVar: float get_lambda_0(long)
org.opencv.contrib.StereoVar: void set_lambda_0(long,float)
org.opencv.contrib.StereoVar: int get_penalization_0(long)
org.opencv.contrib.StereoVar: void set_penalization_0(long,int)
org.opencv.contrib.StereoVar: int get_cycle_0(long)
org.opencv.contrib.StereoVar: void set_cycle_0(long,int)
org.opencv.contrib.StereoVar: int get_flags_0(long)
org.opencv.contrib.StereoVar: void set_flags_0(long,int)
org.opencv.contrib.StereoVar: void delete(long)
org.opencv.core.Algorithm
org.opencv.core.Algorithm: boolean getBool_0(long,java.lang.String)
org.opencv.core.Algorithm: double getDouble_0(long,java.lang.String)
org.opencv.core.Algorithm: int getInt_0(long,java.lang.String)
org.opencv.core.Algorithm: long getMat_0(long,java.lang.String)
org.opencv.core.Algorithm: long getMatVector_0(long,java.lang.String)
org.opencv.core.Algorithm: java.lang.String getString_0(long,java.lang.String)
org.opencv.core.Algorithm: java.lang.String paramHelp_0(long,java.lang.String)
org.opencv.core.Algorithm: int paramType_0(long,java.lang.String)
org.opencv.core.Algorithm: void setBool_0(long,java.lang.String,boolean)
org.opencv.core.Algorithm: void setDouble_0(long,java.lang.String,double)
org.opencv.core.Algorithm: void setInt_0(long,java.lang.String,int)
org.opencv.core.Algorithm: void setMat_0(long,java.lang.String,long)
org.opencv.core.Algorithm: void setMatVector_0(long,java.lang.String,long)
org.opencv.core.Algorithm: void setString_0(long,java.lang.String,java.lang.String)
org.opencv.core.Algorithm: void delete(long)
org.opencv.core.Core
org.opencv.core.Core: void LUT_0(long,long,long,int)
org.opencv.core.Core: void LUT_1(long,long,long)
org.opencv.core.Core: double Mahalanobis_0(long,long,long)
org.opencv.core.Core: void PCABackProject_0(long,long,long,long)
org.opencv.core.Core: void PCACompute_0(long,long,long,int)
org.opencv.core.Core: void PCACompute_1(long,long,long)
org.opencv.core.Core: void PCAComputeVar_0(long,long,long,double)
org.opencv.core.Core: void PCAProject_0(long,long,long,long)
org.opencv.core.Core: void SVBackSubst_0(long,long,long,long,long)
org.opencv.core.Core: void SVDecomp_0(long,long,long,long,int)
org.opencv.core.Core: void SVDecomp_1(long,long,long,long)
org.opencv.core.Core: void absdiff_0(long,long,long)
org.opencv.core.Core: void absdiff_1(long,double,double,double,double,long)
org.opencv.core.Core: void add_0(long,long,long,long,int)
org.opencv.core.Core: void add_1(long,long,long,long)
org.opencv.core.Core: void add_2(long,long,long)
org.opencv.core.Core: void add_3(long,double,double,double,double,long,long,int)
org.opencv.core.Core: void add_4(long,double,double,double,double,long,long)
org.opencv.core.Core: void add_5(long,double,double,double,double,long)
org.opencv.core.Core: void addWeighted_0(long,double,long,double,double,long,int)
org.opencv.core.Core: void addWeighted_1(long,double,long,double,double,long)
org.opencv.core.Core: void batchDistance_0(long,long,long,int,long,int,int,long,int,boolean)
org.opencv.core.Core: void batchDistance_1(long,long,long,int,long,int,int)
org.opencv.core.Core: void batchDistance_2(long,long,long,int,long)
org.opencv.core.Core: void bitwise_and_0(long,long,long,long)
org.opencv.core.Core: void bitwise_and_1(long,long,long)
org.opencv.core.Core: void bitwise_not_0(long,long,long)
org.opencv.core.Core: void bitwise_not_1(long,long)
org.opencv.core.Core: void bitwise_or_0(long,long,long,long)
org.opencv.core.Core: void bitwise_or_1(long,long,long)
org.opencv.core.Core: void bitwise_xor_0(long,long,long,long)
org.opencv.core.Core: void bitwise_xor_1(long,long,long)
org.opencv.core.Core: void calcCovarMatrix_0(long,long,long,int,int)
org.opencv.core.Core: void calcCovarMatrix_1(long,long,long,int)
org.opencv.core.Core: void cartToPolar_0(long,long,long,long,boolean)
org.opencv.core.Core: void cartToPolar_1(long,long,long,long)
org.opencv.core.Core: boolean checkRange_0(long,boolean,double,double)
org.opencv.core.Core: boolean checkRange_1(long)
org.opencv.core.Core: void circle_0(long,double,double,int,double,double,double,double,int,int,int)
org.opencv.core.Core: void circle_1(long,double,double,int,double,double,double,double,int)
org.opencv.core.Core: void circle_2(long,double,double,int,double,double,double,double)
org.opencv.core.Core: boolean clipLine_0(int,int,int,int,double,double,double[],double,double,double[])
org.opencv.core.Core: void compare_0(long,long,long,int)
org.opencv.core.Core: void compare_1(long,double,double,double,double,long,int)
org.opencv.core.Core: void completeSymm_0(long,boolean)
org.opencv.core.Core: void completeSymm_1(long)
org.opencv.core.Core: void convertScaleAbs_0(long,long,double,double)
org.opencv.core.Core: void convertScaleAbs_1(long,long)
org.opencv.core.Core: int countNonZero_0(long)
org.opencv.core.Core: float cubeRoot_0(float)
org.opencv.core.Core: void dct_0(long,long,int)
org.opencv.core.Core: void dct_1(long,long)
org.opencv.core.Core: double determinant_0(long)
org.opencv.core.Core: void dft_0(long,long,int,int)
org.opencv.core.Core: void dft_1(long,long)
org.opencv.core.Core: void divide_0(long,long,long,double,int)
org.opencv.core.Core: void divide_1(long,long,long,double)
org.opencv.core.Core: void divide_2(long,long,long)
org.opencv.core.Core: void divide_3(double,long,long,int)
org.opencv.core.Core: void divide_4(double,long,long)
org.opencv.core.Core: void divide_5(long,double,double,double,double,long,double,int)
org.opencv.core.Core: void divide_6(long,double,double,double,double,long,double)
org.opencv.core.Core: void divide_7(long,double,double,double,double,long)
org.opencv.core.Core: boolean eigen_0(long,boolean,long,long)
org.opencv.core.Core: void ellipse_0(long,double,double,double,double,double,double,double,double,double,double,double,int,int,int)
org.opencv.core.Core: void ellipse_1(long,double,double,double,double,double,double,double,double,double,double,double,int)
org.opencv.core.Core: void ellipse_2(long,double,double,double,double,double,double,double,double,double,double,double)
org.opencv.core.Core: void ellipse_3(long,double,double,double,double,double,double,double,double,double,int,int)
org.opencv.core.Core: void ellipse_4(long,double,double,double,double,double,double,double,double,double,int)
org.opencv.core.Core: void ellipse_5(long,double,double,double,double,double,double,double,double,double)
org.opencv.core.Core: void ellipse2Poly_0(double,double,double,double,int,int,int,int,long)
org.opencv.core.Core: void exp_0(long,long)
org.opencv.core.Core: void extractChannel_0(long,long,int)
org.opencv.core.Core: float fastAtan2_0(float,float)
org.opencv.core.Core: void fillConvexPoly_0(long,long,double,double,double,double,int,int)
org.opencv.core.Core: void fillConvexPoly_1(long,long,double,double,double,double)
org.opencv.core.Core: void fillPoly_0(long,long,double,double,double,double,int,int,double,double)
org.opencv.core.Core: void fillPoly_1(long,long,double,double,double,double)
org.opencv.core.Core: void findNonZero_0(long,long)
org.opencv.core.Core: void flip_0(long,long,int)
org.opencv.core.Core: void gemm_0(long,long,double,long,double,long,int)
org.opencv.core.Core: void gemm_1(long,long,double,long,double,long)
org.opencv.core.Core: java.lang.String getBuildInformation_0()
org.opencv.core.Core: long getCPUTickCount_0()
org.opencv.core.Core: int getNumberOfCPUs_0()
org.opencv.core.Core: int getOptimalDFTSize_0(int)
org.opencv.core.Core: long getTickCount_0()
org.opencv.core.Core: double getTickFrequency_0()
org.opencv.core.Core: void hconcat_0(long,long)
org.opencv.core.Core: void idct_0(long,long,int)
org.opencv.core.Core: void idct_1(long,long)
org.opencv.core.Core: void idft_0(long,long,int,int)
org.opencv.core.Core: void idft_1(long,long)
org.opencv.core.Core: void inRange_0(long,double,double,double,double,double,double,double,double,long)
org.opencv.core.Core: void insertChannel_0(long,long,int)
org.opencv.core.Core: double invert_0(long,long,int)
org.opencv.core.Core: double invert_1(long,long)
org.opencv.core.Core: double kmeans_0(long,int,long,int,int,double,int,int,long)
org.opencv.core.Core: double kmeans_1(long,int,long,int,int,double,int,int)
org.opencv.core.Core: void line_0(long,double,double,double,double,double,double,double,double,int,int,int)
org.opencv.core.Core: void line_1(long,double,double,double,double,double,double,double,double,int)
org.opencv.core.Core: void line_2(long,double,double,double,double,double,double,double,double)
org.opencv.core.Core: void log_0(long,long)
org.opencv.core.Core: void magnitude_0(long,long,long)
org.opencv.core.Core: void max_0(long,long,long)
org.opencv.core.Core: void max_1(long,double,double,double,double,long)
org.opencv.core.Core: double[] mean_0(long,long)
org.opencv.core.Core: double[] mean_1(long)
org.opencv.core.Core: void meanStdDev_0(long,long,long,long)
org.opencv.core.Core: void meanStdDev_1(long,long,long)
org.opencv.core.Core: void merge_0(long,long)
org.opencv.core.Core: void min_0(long,long,long)
org.opencv.core.Core: void min_1(long,double,double,double,double,long)
org.opencv.core.Core: void mixChannels_0(long,long,long)
org.opencv.core.Core: void mulSpectrums_0(long,long,long,int,boolean)
org.opencv.core.Core: void mulSpectrums_1(long,long,long,int)
org.opencv.core.Core: void mulTransposed_0(long,long,boolean,long,double,int)
org.opencv.core.Core: void mulTransposed_1(long,long,boolean,long,double)
org.opencv.core.Core: void mulTransposed_2(long,long,boolean)
org.opencv.core.Core: void multiply_0(long,long,long,double,int)
org.opencv.core.Core: void multiply_1(long,long,long,double)
org.opencv.core.Core: void multiply_2(long,long,long)
org.opencv.core.Core: void multiply_3(long,double,double,double,double,long,double,int)
org.opencv.core.Core: void multiply_4(long,double,double,double,double,long,double)
org.opencv.core.Core: void multiply_5(long,double,double,double,double,long)
org.opencv.core.Core: double norm_0(long,int,long)
org.opencv.core.Core: double norm_1(long,int)
org.opencv.core.Core: double norm_2(long)
org.opencv.core.Core: double norm_3(long,long,int,long)
org.opencv.core.Core: double norm_4(long,long,int)
org.opencv.core.Core: double norm_5(long,long)
org.opencv.core.Core: void normalize_0(long,long,double,double,int,int,long)
org.opencv.core.Core: void normalize_1(long,long,double,double,int,int)
org.opencv.core.Core: void normalize_2(long,long,double,double,int)
org.opencv.core.Core: void normalize_3(long,long)
org.opencv.core.Core: void patchNaNs_0(long,double)
org.opencv.core.Core: void patchNaNs_1(long)
org.opencv.core.Core: void perspectiveTransform_0(long,long,long)
org.opencv.core.Core: void phase_0(long,long,long,boolean)
org.opencv.core.Core: void phase_1(long,long,long)
org.opencv.core.Core: void polarToCart_0(long,long,long,long,boolean)
org.opencv.core.Core: void polarToCart_1(long,long,long,long)
org.opencv.core.Core: void polylines_0(long,long,boolean,double,double,double,double,int,int,int)
org.opencv.core.Core: void polylines_1(long,long,boolean,double,double,double,double,int)
org.opencv.core.Core: void polylines_2(long,long,boolean,double,double,double,double)
org.opencv.core.Core: void pow_0(long,double,long)
org.opencv.core.Core: void putText_0(long,java.lang.String,double,double,int,double,double,double,double,double,int,int,boolean)
org.opencv.core.Core: void putText_1(long,java.lang.String,double,double,int,double,double,double,double,double,int)
org.opencv.core.Core: void putText_2(long,java.lang.String,double,double,int,double,double,double,double,double)
org.opencv.core.Core: void randShuffle_0(long,double)
org.opencv.core.Core: void randShuffle_1(long)
org.opencv.core.Core: void randn_0(long,double,double)
org.opencv.core.Core: void randu_0(long,double,double)
org.opencv.core.Core: void rectangle_0(long,double,double,double,double,double,double,double,double,int,int,int)
org.opencv.core.Core: void rectangle_1(long,double,double,double,double,double,double,double,double,int)
org.opencv.core.Core: void rectangle_2(long,double,double,double,double,double,double,double,double)
org.opencv.core.Core: void reduce_0(long,long,int,int,int)
org.opencv.core.Core: void reduce_1(long,long,int,int)
org.opencv.core.Core: void repeat_0(long,int,int,long)
org.opencv.core.Core: void scaleAdd_0(long,double,long,long)
org.opencv.core.Core: void setErrorVerbosity_0(boolean)
org.opencv.core.Core: void setIdentity_0(long,double,double,double,double)
org.opencv.core.Core: void setIdentity_1(long)
org.opencv.core.Core: boolean solve_0(long,long,long,int)
org.opencv.core.Core: boolean solve_1(long,long,long)
org.opencv.core.Core: int solveCubic_0(long,long)
org.opencv.core.Core: double solvePoly_0(long,long,int)
org.opencv.core.Core: double solvePoly_1(long,long)
org.opencv.core.Core: void sort_0(long,long,int)
org.opencv.core.Core: void sortIdx_0(long,long,int)
org.opencv.core.Core: void split_0(long,long)
org.opencv.core.Core: void sqrt_0(long,long)
org.opencv.core.Core: void subtract_0(long,long,long,long,int)
org.opencv.core.Core: void subtract_1(long,long,long,long)
org.opencv.core.Core: void subtract_2(long,long,long)
org.opencv.core.Core: void subtract_3(long,double,double,double,double,long,long,int)
org.opencv.core.Core: void subtract_4(long,double,double,double,double,long,long)
org.opencv.core.Core: void subtract_5(long,double,double,double,double,long)
org.opencv.core.Core: double[] sumElems_0(long)
org.opencv.core.Core: double[] trace_0(long)
org.opencv.core.Core: void transform_0(long,long,long)
org.opencv.core.Core: void transpose_0(long,long)
org.opencv.core.Core: void vconcat_0(long,long)
org.opencv.core.Core: double[] n_minMaxLocManual(long,long)
org.opencv.core.Core: double[] n_getTextSize(java.lang.String,int,double,int,int[])
org.opencv.core.Mat
org.opencv.core.Mat: long n_Mat()
org.opencv.core.Mat: long n_Mat(int,int,int)
org.opencv.core.Mat: long n_Mat(double,double,int)
org.opencv.core.Mat: long n_Mat(int,int,int,double,double,double,double)
org.opencv.core.Mat: long n_Mat(double,double,int,double,double,double,double)
org.opencv.core.Mat: long n_Mat(long,int,int,int,int)
org.opencv.core.Mat: long n_Mat(long,int,int)
org.opencv.core.Mat: long n_adjustROI(long,int,int,int,int)
org.opencv.core.Mat: void n_assignTo(long,long,int)
org.opencv.core.Mat: void n_assignTo(long,long)
org.opencv.core.Mat: int n_channels(long)
org.opencv.core.Mat: int n_checkVector(long,int,int,boolean)
org.opencv.core.Mat: int n_checkVector(long,int,int)
org.opencv.core.Mat: int n_checkVector(long,int)
org.opencv.core.Mat: long n_clone(long)
org.opencv.core.Mat: long n_col(long,int)
org.opencv.core.Mat: long n_colRange(long,int,int)
org.opencv.core.Mat: int n_dims(long)
org.opencv.core.Mat: int n_cols(long)
org.opencv.core.Mat: void n_convertTo(long,long,int,double,double)
org.opencv.core.Mat: void n_convertTo(long,long,int,double)
org.opencv.core.Mat: void n_convertTo(long,long,int)
org.opencv.core.Mat: void n_copyTo(long,long)
org.opencv.core.Mat: void n_copyTo(long,long,long)
org.opencv.core.Mat: void n_create(long,int,int,int)
org.opencv.core.Mat: void n_create(long,double,double,int)
org.opencv.core.Mat: long n_cross(long,long)
org.opencv.core.Mat: long n_dataAddr(long)
org.opencv.core.Mat: int n_depth(long)
org.opencv.core.Mat: long n_diag(long,int)
org.opencv.core.Mat: long n_diag(long)
org.opencv.core.Mat: double n_dot(long,long)
org.opencv.core.Mat: long n_elemSize(long)
org.opencv.core.Mat: long n_elemSize1(long)
org.opencv.core.Mat: boolean n_empty(long)
org.opencv.core.Mat: long n_eye(int,int,int)
org.opencv.core.Mat: long n_eye(double,double,int)
org.opencv.core.Mat: long n_inv(long,int)
org.opencv.core.Mat: long n_inv(long)
org.opencv.core.Mat: boolean n_isContinuous(long)
org.opencv.core.Mat: boolean n_isSubmatrix(long)
org.opencv.core.Mat: void locateROI_0(long,double[],double[])
org.opencv.core.Mat: long n_mul(long,long,double)
org.opencv.core.Mat: long n_mul(long,long)
org.opencv.core.Mat: long n_ones(int,int,int)
org.opencv.core.Mat: long n_ones(double,double,int)
org.opencv.core.Mat: void n_push_back(long,long)
org.opencv.core.Mat: void n_release(long)
org.opencv.core.Mat: long n_reshape(long,int,int)
org.opencv.core.Mat: long n_reshape(long,int)
org.opencv.core.Mat: long n_row(long,int)
org.opencv.core.Mat: long n_rowRange(long,int,int)
org.opencv.core.Mat: int n_rows(long)
org.opencv.core.Mat: long n_setTo(long,double,double,double,double)
org.opencv.core.Mat: long n_setTo(long,double,double,double,double,long)
org.opencv.core.Mat: long n_setTo(long,long,long)
org.opencv.core.Mat: long n_setTo(long,long)
org.opencv.core.Mat: double[] n_size(long)
org.opencv.core.Mat: long n_step1(long,int)
org.opencv.core.Mat: long n_step1(long)
org.opencv.core.Mat: long n_submat_rr(long,int,int,int,int)
org.opencv.core.Mat: long n_submat(long,int,int,int,int)
org.opencv.core.Mat: long n_t(long)
org.opencv.core.Mat: long n_total(long)
org.opencv.core.Mat: int n_type(long)
org.opencv.core.Mat: long n_zeros(int,int,int)
org.opencv.core.Mat: long n_zeros(double,double,int)
org.opencv.core.Mat: void n_delete(long)
org.opencv.core.Mat: int nPutD(long,int,int,int,double[])
org.opencv.core.Mat: int nPutF(long,int,int,int,float[])
org.opencv.core.Mat: int nPutI(long,int,int,int,int[])
org.opencv.core.Mat: int nPutS(long,int,int,int,short[])
org.opencv.core.Mat: int nPutB(long,int,int,int,byte[])
org.opencv.core.Mat: int nGetB(long,int,int,int,byte[])
org.opencv.core.Mat: int nGetS(long,int,int,int,short[])
org.opencv.core.Mat: int nGetI(long,int,int,int,int[])
org.opencv.core.Mat: int nGetF(long,int,int,int,float[])
org.opencv.core.Mat: int nGetD(long,int,int,int,double[])
org.opencv.core.Mat: double[] nGet(long,int,int)
org.opencv.core.Mat: java.lang.String nDump(long)
org.opencv.features2d.DescriptorExtractor
org.opencv.features2d.DescriptorExtractor: void compute_0(long,long,long,long)
org.opencv.features2d.DescriptorExtractor: void compute_1(long,long,long,long)
org.opencv.features2d.DescriptorExtractor: long create_0(int)
org.opencv.features2d.DescriptorExtractor: int descriptorSize_0(long)
org.opencv.features2d.DescriptorExtractor: int descriptorType_0(long)
org.opencv.features2d.DescriptorExtractor: boolean empty_0(long)
org.opencv.features2d.DescriptorExtractor: void read_0(long,java.lang.String)
org.opencv.features2d.DescriptorExtractor: void write_0(long,java.lang.String)
org.opencv.features2d.DescriptorExtractor: void delete(long)
org.opencv.features2d.DescriptorMatcher
org.opencv.features2d.DescriptorMatcher: void add_0(long,long)
org.opencv.features2d.DescriptorMatcher: void clear_0(long)
org.opencv.features2d.DescriptorMatcher: long clone_0(long,boolean)
org.opencv.features2d.DescriptorMatcher: long clone_1(long)
org.opencv.features2d.DescriptorMatcher: long create_0(int)
org.opencv.features2d.DescriptorMatcher: boolean empty_0(long)
org.opencv.features2d.DescriptorMatcher: long getTrainDescriptors_0(long)
org.opencv.features2d.DescriptorMatcher: boolean isMaskSupported_0(long)
org.opencv.features2d.DescriptorMatcher: void knnMatch_0(long,long,long,long,int,long,boolean)
org.opencv.features2d.DescriptorMatcher: void knnMatch_1(long,long,long,long,int)
org.opencv.features2d.DescriptorMatcher: void knnMatch_2(long,long,long,int,long,boolean)
org.opencv.features2d.DescriptorMatcher: void knnMatch_3(long,long,long,int)
org.opencv.features2d.DescriptorMatcher: void match_0(long,long,long,long,long)
org.opencv.features2d.DescriptorMatcher: void match_1(long,long,long,long)
org.opencv.features2d.DescriptorMatcher: void match_2(long,long,long,long)
org.opencv.features2d.DescriptorMatcher: void match_3(long,long,long)
org.opencv.features2d.DescriptorMatcher: void radiusMatch_0(long,long,long,long,float,long,boolean)
org.opencv.features2d.DescriptorMatcher: void radiusMatch_1(long,long,long,long,float)
org.opencv.features2d.DescriptorMatcher: void radiusMatch_2(long,long,long,float,long,boolean)
org.opencv.features2d.DescriptorMatcher: void radiusMatch_3(long,long,long,float)
org.opencv.features2d.DescriptorMatcher: void read_0(long,java.lang.String)
org.opencv.features2d.DescriptorMatcher: void train_0(long)
org.opencv.features2d.DescriptorMatcher: void write_0(long,java.lang.String)
org.opencv.features2d.DescriptorMatcher: void delete(long)
org.opencv.features2d.FeatureDetector
org.opencv.features2d.FeatureDetector: long create_0(int)
org.opencv.features2d.FeatureDetector: void detect_0(long,long,long,long)
org.opencv.features2d.FeatureDetector: void detect_1(long,long,long)
org.opencv.features2d.FeatureDetector: void detect_2(long,long,long,long)
org.opencv.features2d.FeatureDetector: void detect_3(long,long,long)
org.opencv.features2d.FeatureDetector: boolean empty_0(long)
org.opencv.features2d.FeatureDetector: void read_0(long,java.lang.String)
org.opencv.features2d.FeatureDetector: void write_0(long,java.lang.String)
org.opencv.features2d.FeatureDetector: void delete(long)
org.opencv.features2d.Features2d
org.opencv.features2d.Features2d: void drawKeypoints_0(long,long,long,double,double,double,double,int)
org.opencv.features2d.Features2d: void drawKeypoints_1(long,long,long)
org.opencv.features2d.Features2d: void drawMatches_0(long,long,long,long,long,long,double,double,double,double,double,double,double,double,long,int)
org.opencv.features2d.Features2d: void drawMatches_1(long,long,long,long,long,long)
org.opencv.features2d.Features2d: void drawMatches2_0(long,long,long,long,long,long,double,double,double,double,double,double,double,double,long,int)
org.opencv.features2d.Features2d: void drawMatches2_1(long,long,long,long,long,long)
org.opencv.features2d.GenericDescriptorMatcher
org.opencv.features2d.GenericDescriptorMatcher: void add_0(long,long,long)
org.opencv.features2d.GenericDescriptorMatcher: void classify_0(long,long,long,long,long)
org.opencv.features2d.GenericDescriptorMatcher: void classify_1(long,long,long)
org.opencv.features2d.GenericDescriptorMatcher: void clear_0(long)
org.opencv.features2d.GenericDescriptorMatcher: long clone_0(long,boolean)
org.opencv.features2d.GenericDescriptorMatcher: long clone_1(long)
org.opencv.features2d.GenericDescriptorMatcher: long create_0(int)
org.opencv.features2d.GenericDescriptorMatcher: boolean empty_0(long)
org.opencv.features2d.GenericDescriptorMatcher: long getTrainImages_0(long)
org.opencv.features2d.GenericDescriptorMatcher: long getTrainKeypoints_0(long)
org.opencv.features2d.GenericDescriptorMatcher: boolean isMaskSupported_0(long)
org.opencv.features2d.GenericDescriptorMatcher: void knnMatch_0(long,long,long,long,long,long,int,long,boolean)
org.opencv.features2d.GenericDescriptorMatcher: void knnMatch_1(long,long,long,long,long,long,int)
org.opencv.features2d.GenericDescriptorMatcher: void knnMatch_2(long,long,long,long,int,long,boolean)
org.opencv.features2d.GenericDescriptorMatcher: void knnMatch_3(long,long,long,long,int)
org.opencv.features2d.GenericDescriptorMatcher: void match_0(long,long,long,long,long,long,long)
org.opencv.features2d.GenericDescriptorMatcher: void match_1(long,long,long,long,long,long)
org.opencv.features2d.GenericDescriptorMatcher: void match_2(long,long,long,long,long)
org.opencv.features2d.GenericDescriptorMatcher: void match_3(long,long,long,long)
org.opencv.features2d.GenericDescriptorMatcher: void radiusMatch_0(long,long,long,long,long,long,float,long,boolean)
org.opencv.features2d.GenericDescriptorMatcher: void radiusMatch_1(long,long,long,long,long,long,float)
org.opencv.features2d.GenericDescriptorMatcher: void radiusMatch_2(long,long,long,long,float,long,boolean)
org.opencv.features2d.GenericDescriptorMatcher: void radiusMatch_3(long,long,long,long,float)
org.opencv.features2d.GenericDescriptorMatcher: void read_0(long,java.lang.String)
org.opencv.features2d.GenericDescriptorMatcher: void train_0(long)
org.opencv.features2d.GenericDescriptorMatcher: void write_0(long,java.lang.String)
org.opencv.features2d.GenericDescriptorMatcher: void delete(long)
org.opencv.gpu.DeviceInfo
org.opencv.gpu.DeviceInfo: long DeviceInfo_0()
org.opencv.gpu.DeviceInfo: long DeviceInfo_1(int)
org.opencv.gpu.DeviceInfo: int deviceID_0(long)
org.opencv.gpu.DeviceInfo: long freeMemory_0(long)
org.opencv.gpu.DeviceInfo: boolean isCompatible_0(long)
org.opencv.gpu.DeviceInfo: int majorVersion_0(long)
org.opencv.gpu.DeviceInfo: int minorVersion_0(long)
org.opencv.gpu.DeviceInfo: int multiProcessorCount_0(long)
org.opencv.gpu.DeviceInfo: java.lang.String name_0(long)
org.opencv.gpu.DeviceInfo: void queryMemory_0(long,double[],double[])
org.opencv.gpu.DeviceInfo: long sharedMemPerBlock_0(long)
org.opencv.gpu.DeviceInfo: boolean supports_0(long,int)
org.opencv.gpu.DeviceInfo: long totalMemory_0(long)
org.opencv.gpu.DeviceInfo: void delete(long)
org.opencv.gpu.Gpu
org.opencv.gpu.Gpu: boolean deviceSupports_0(int)
org.opencv.gpu.Gpu: int getCudaEnabledDeviceCount_0()
org.opencv.gpu.Gpu: int getDevice_0()
org.opencv.gpu.Gpu: void printCudaDeviceInfo_0(int)
org.opencv.gpu.Gpu: void printShortCudaDeviceInfo_0(int)
org.opencv.gpu.Gpu: void resetDevice_0()
org.opencv.gpu.Gpu: void setDevice_0(int)
org.opencv.gpu.TargetArchs
org.opencv.gpu.TargetArchs: boolean builtWith_0(int)
org.opencv.gpu.TargetArchs: boolean has_0(int,int)
org.opencv.gpu.TargetArchs: boolean hasBin_0(int,int)
org.opencv.gpu.TargetArchs: boolean hasEqualOrGreater_0(int,int)
org.opencv.gpu.TargetArchs: boolean hasEqualOrGreaterBin_0(int,int)
org.opencv.gpu.TargetArchs: boolean hasEqualOrGreaterPtx_0(int,int)
org.opencv.gpu.TargetArchs: boolean hasEqualOrLessPtx_0(int,int)
org.opencv.gpu.TargetArchs: boolean hasPtx_0(int,int)
org.opencv.gpu.TargetArchs: void delete(long)
org.opencv.highgui.Highgui
org.opencv.highgui.Highgui: long imdecode_0(long,int)
org.opencv.highgui.Highgui: boolean imencode_0(java.lang.String,long,long,long)
org.opencv.highgui.Highgui: boolean imencode_1(java.lang.String,long,long)
org.opencv.highgui.Highgui: long imread_0(java.lang.String,int)
org.opencv.highgui.Highgui: long imread_1(java.lang.String)
org.opencv.highgui.Highgui: boolean imwrite_0(java.lang.String,long,long)
org.opencv.highgui.Highgui: boolean imwrite_1(java.lang.String,long)
org.opencv.highgui.VideoCapture
org.opencv.highgui.VideoCapture: long n_VideoCapture()
org.opencv.highgui.VideoCapture: long n_VideoCapture(java.lang.String)
org.opencv.highgui.VideoCapture: long n_VideoCapture(int)
org.opencv.highgui.VideoCapture: double n_get(long,int)
org.opencv.highgui.VideoCapture: boolean n_grab(long)
org.opencv.highgui.VideoCapture: boolean n_isOpened(long)
org.opencv.highgui.VideoCapture: boolean n_open(long,java.lang.String)
org.opencv.highgui.VideoCapture: boolean n_open(long,int)
org.opencv.highgui.VideoCapture: boolean n_read(long,long)
org.opencv.highgui.VideoCapture: void n_release(long)
org.opencv.highgui.VideoCapture: boolean n_retrieve(long,long,int)
org.opencv.highgui.VideoCapture: boolean n_retrieve(long,long)
org.opencv.highgui.VideoCapture: boolean n_set(long,int,double)
org.opencv.highgui.VideoCapture: java.lang.String n_getSupportedPreviewSizes(long)
org.opencv.highgui.VideoCapture: void n_delete(long)
org.opencv.imgproc.CLAHE
org.opencv.imgproc.CLAHE: void apply_0(long,long,long)
org.opencv.imgproc.CLAHE: void setClipLimit_0(long,double)
org.opencv.imgproc.CLAHE: void setTilesGridSize_0(long,double,double)
org.opencv.imgproc.CLAHE: void delete(long)
org.opencv.imgproc.Imgproc
org.opencv.imgproc.Imgproc: void Canny_0(long,long,double,double,int,boolean)
org.opencv.imgproc.Imgproc: void Canny_1(long,long,double,double)
org.opencv.imgproc.Imgproc: void GaussianBlur_0(long,long,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void GaussianBlur_1(long,long,double,double,double,double)
org.opencv.imgproc.Imgproc: void GaussianBlur_2(long,long,double,double,double)
org.opencv.imgproc.Imgproc: void HoughCircles_0(long,long,int,double,double,double,double,int,int)
org.opencv.imgproc.Imgproc: void HoughCircles_1(long,long,int,double,double)
org.opencv.imgproc.Imgproc: void HoughLines_0(long,long,double,double,int,double,double)
org.opencv.imgproc.Imgproc: void HoughLines_1(long,long,double,double,int)
org.opencv.imgproc.Imgproc: void HoughLinesP_0(long,long,double,double,int,double,double)
org.opencv.imgproc.Imgproc: void HoughLinesP_1(long,long,double,double,int)
org.opencv.imgproc.Imgproc: void HuMoments_0(long,long)
org.opencv.imgproc.Imgproc: void Laplacian_0(long,long,int,int,double,double,int)
org.opencv.imgproc.Imgproc: void Laplacian_1(long,long,int,int,double,double)
org.opencv.imgproc.Imgproc: void Laplacian_2(long,long,int)
org.opencv.imgproc.Imgproc: double PSNR_0(long,long)
org.opencv.imgproc.Imgproc: void Scharr_0(long,long,int,int,int,double,double,int)
org.opencv.imgproc.Imgproc: void Scharr_1(long,long,int,int,int,double,double)
org.opencv.imgproc.Imgproc: void Scharr_2(long,long,int,int,int)
org.opencv.imgproc.Imgproc: void Sobel_0(long,long,int,int,int,int,double,double,int)
org.opencv.imgproc.Imgproc: void Sobel_1(long,long,int,int,int,int,double,double)
org.opencv.imgproc.Imgproc: void Sobel_2(long,long,int,int,int)
org.opencv.imgproc.Imgproc: void accumulate_0(long,long,long)
org.opencv.imgproc.Imgproc: void accumulate_1(long,long)
org.opencv.imgproc.Imgproc: void accumulateProduct_0(long,long,long,long)
org.opencv.imgproc.Imgproc: void accumulateProduct_1(long,long,long)
org.opencv.imgproc.Imgproc: void accumulateSquare_0(long,long,long)
org.opencv.imgproc.Imgproc: void accumulateSquare_1(long,long)
org.opencv.imgproc.Imgproc: void accumulateWeighted_0(long,long,double,long)
org.opencv.imgproc.Imgproc: void accumulateWeighted_1(long,long,double)
org.opencv.imgproc.Imgproc: void adaptiveBilateralFilter_0(long,long,double,double,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void adaptiveBilateralFilter_1(long,long,double,double,double,double,double,double)
org.opencv.imgproc.Imgproc: void adaptiveBilateralFilter_2(long,long,double,double,double)
org.opencv.imgproc.Imgproc: void adaptiveThreshold_0(long,long,double,int,int,int,double)
org.opencv.imgproc.Imgproc: void approxPolyDP_0(long,long,double,boolean)
org.opencv.imgproc.Imgproc: double arcLength_0(long,boolean)
org.opencv.imgproc.Imgproc: void bilateralFilter_0(long,long,int,double,double,int)
org.opencv.imgproc.Imgproc: void bilateralFilter_1(long,long,int,double,double)
org.opencv.imgproc.Imgproc: void blur_0(long,long,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void blur_1(long,long,double,double,double,double)
org.opencv.imgproc.Imgproc: void blur_2(long,long,double,double)
org.opencv.imgproc.Imgproc: int borderInterpolate_0(int,int,int)
org.opencv.imgproc.Imgproc: double[] boundingRect_0(long)
org.opencv.imgproc.Imgproc: void boxFilter_0(long,long,int,double,double,double,double,boolean,int)
org.opencv.imgproc.Imgproc: void boxFilter_1(long,long,int,double,double,double,double,boolean)
org.opencv.imgproc.Imgproc: void boxFilter_2(long,long,int,double,double)
org.opencv.imgproc.Imgproc: void calcBackProject_0(long,long,long,long,long,double)
org.opencv.imgproc.Imgproc: void calcHist_0(long,long,long,long,long,long,boolean)
org.opencv.imgproc.Imgproc: void calcHist_1(long,long,long,long,long,long)
org.opencv.imgproc.Imgproc: double compareHist_0(long,long,int)
org.opencv.imgproc.Imgproc: double contourArea_0(long,boolean)
org.opencv.imgproc.Imgproc: double contourArea_1(long)
org.opencv.imgproc.Imgproc: void convertMaps_0(long,long,long,long,int,boolean)
org.opencv.imgproc.Imgproc: void convertMaps_1(long,long,long,long,int)
org.opencv.imgproc.Imgproc: void convexHull_0(long,long,boolean)
org.opencv.imgproc.Imgproc: void convexHull_1(long,long)
org.opencv.imgproc.Imgproc: void convexityDefects_0(long,long,long)
org.opencv.imgproc.Imgproc: void copyMakeBorder_0(long,long,int,int,int,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void copyMakeBorder_1(long,long,int,int,int,int,int)
org.opencv.imgproc.Imgproc: void cornerEigenValsAndVecs_0(long,long,int,int,int)
org.opencv.imgproc.Imgproc: void cornerEigenValsAndVecs_1(long,long,int,int)
org.opencv.imgproc.Imgproc: void cornerHarris_0(long,long,int,int,double,int)
org.opencv.imgproc.Imgproc: void cornerHarris_1(long,long,int,int,double)
org.opencv.imgproc.Imgproc: void cornerMinEigenVal_0(long,long,int,int,int)
org.opencv.imgproc.Imgproc: void cornerMinEigenVal_1(long,long,int,int)
org.opencv.imgproc.Imgproc: void cornerMinEigenVal_2(long,long,int)
org.opencv.imgproc.Imgproc: void cornerSubPix_0(long,long,double,double,double,double,int,int,double)
org.opencv.imgproc.Imgproc: void createHanningWindow_0(long,double,double,int)
org.opencv.imgproc.Imgproc: void cvtColor_0(long,long,int,int)
org.opencv.imgproc.Imgproc: void cvtColor_1(long,long,int)
org.opencv.imgproc.Imgproc: void dilate_0(long,long,long,double,double,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void dilate_1(long,long,long,double,double,int)
org.opencv.imgproc.Imgproc: void dilate_2(long,long,long)
org.opencv.imgproc.Imgproc: void distanceTransform_0(long,long,int,int)
org.opencv.imgproc.Imgproc: void distanceTransformWithLabels_0(long,long,long,int,int,int)
org.opencv.imgproc.Imgproc: void distanceTransformWithLabels_1(long,long,long,int,int)
org.opencv.imgproc.Imgproc: void drawContours_0(long,long,int,double,double,double,double,int,int,long,int,double,double)
org.opencv.imgproc.Imgproc: void drawContours_1(long,long,int,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void drawContours_2(long,long,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void equalizeHist_0(long,long)
org.opencv.imgproc.Imgproc: void erode_0(long,long,long,double,double,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void erode_1(long,long,long,double,double,int)
org.opencv.imgproc.Imgproc: void erode_2(long,long,long)
org.opencv.imgproc.Imgproc: void filter2D_0(long,long,int,long,double,double,double,int)
org.opencv.imgproc.Imgproc: void filter2D_1(long,long,int,long,double,double,double)
org.opencv.imgproc.Imgproc: void filter2D_2(long,long,int,long)
org.opencv.imgproc.Imgproc: void findContours_0(long,long,long,int,int,double,double)
org.opencv.imgproc.Imgproc: void findContours_1(long,long,long,int,int)
org.opencv.imgproc.Imgproc: double[] fitEllipse_0(long)
org.opencv.imgproc.Imgproc: void fitLine_0(long,long,int,double,double,double)
org.opencv.imgproc.Imgproc: int floodFill_0(long,long,double,double,double,double,double,double,double[],double,double,double,double,double,double,double,double,int)
org.opencv.imgproc.Imgproc: int floodFill_1(long,long,double,double,double,double,double,double)
org.opencv.imgproc.Imgproc: long getAffineTransform_0(long,long)
org.opencv.imgproc.Imgproc: long getDefaultNewCameraMatrix_0(long,double,double,boolean)
org.opencv.imgproc.Imgproc: long getDefaultNewCameraMatrix_1(long)
org.opencv.imgproc.Imgproc: void getDerivKernels_0(long,long,int,int,int,boolean,int)
org.opencv.imgproc.Imgproc: void getDerivKernels_1(long,long,int,int,int)
org.opencv.imgproc.Imgproc: long getGaborKernel_0(double,double,double,double,double,double,double,int)
org.opencv.imgproc.Imgproc: long getGaborKernel_1(double,double,double,double,double,double)
org.opencv.imgproc.Imgproc: long getGaussianKernel_0(int,double,int)
org.opencv.imgproc.Imgproc: long getGaussianKernel_1(int,double)
org.opencv.imgproc.Imgproc: long getPerspectiveTransform_0(long,long)
org.opencv.imgproc.Imgproc: void getRectSubPix_0(long,double,double,double,double,long,int)
org.opencv.imgproc.Imgproc: void getRectSubPix_1(long,double,double,double,double,long)
org.opencv.imgproc.Imgproc: long getRotationMatrix2D_0(double,double,double,double)
org.opencv.imgproc.Imgproc: long getStructuringElement_0(int,double,double,double,double)
org.opencv.imgproc.Imgproc: long getStructuringElement_1(int,double,double)
org.opencv.imgproc.Imgproc: void goodFeaturesToTrack_0(long,long,int,double,double,long,int,boolean,double)
org.opencv.imgproc.Imgproc: void goodFeaturesToTrack_1(long,long,int,double,double)
org.opencv.imgproc.Imgproc: void grabCut_0(long,long,int,int,int,int,long,long,int,int)
org.opencv.imgproc.Imgproc: void grabCut_1(long,long,int,int,int,int,long,long,int)
org.opencv.imgproc.Imgproc: void initUndistortRectifyMap_0(long,long,long,long,double,double,int,long,long)
org.opencv.imgproc.Imgproc: float initWideAngleProjMap_0(long,long,double,double,int,int,long,long,int,double)
org.opencv.imgproc.Imgproc: float initWideAngleProjMap_1(long,long,double,double,int,int,long,long)
org.opencv.imgproc.Imgproc: void integral_0(long,long,int)
org.opencv.imgproc.Imgproc: void integral_1(long,long)
org.opencv.imgproc.Imgproc: void integral2_0(long,long,long,int)
org.opencv.imgproc.Imgproc: void integral2_1(long,long,long)
org.opencv.imgproc.Imgproc: void integral3_0(long,long,long,long,int)
org.opencv.imgproc.Imgproc: void integral3_1(long,long,long,long)
org.opencv.imgproc.Imgproc: float intersectConvexConvex_0(long,long,long,boolean)
org.opencv.imgproc.Imgproc: float intersectConvexConvex_1(long,long,long)
org.opencv.imgproc.Imgproc: void invertAffineTransform_0(long,long)
org.opencv.imgproc.Imgproc: boolean isContourConvex_0(long)
org.opencv.imgproc.Imgproc: double matchShapes_0(long,long,int,double)
org.opencv.imgproc.Imgproc: void matchTemplate_0(long,long,long,int)
org.opencv.imgproc.Imgproc: void medianBlur_0(long,long,int)
org.opencv.imgproc.Imgproc: double[] minAreaRect_0(long)
org.opencv.imgproc.Imgproc: void minEnclosingCircle_0(long,double[],double[])
org.opencv.imgproc.Imgproc: long moments_0(long,boolean)
org.opencv.imgproc.Imgproc: long moments_1(long)
org.opencv.imgproc.Imgproc: void morphologyEx_0(long,long,int,long,double,double,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void morphologyEx_1(long,long,int,long,double,double,int)
org.opencv.imgproc.Imgproc: void morphologyEx_2(long,long,int,long)
org.opencv.imgproc.Imgproc: double[] phaseCorrelate_0(long,long,long)
org.opencv.imgproc.Imgproc: double[] phaseCorrelate_1(long,long)
org.opencv.imgproc.Imgproc: double[] phaseCorrelateRes_0(long,long,long,double[])
org.opencv.imgproc.Imgproc: double[] phaseCorrelateRes_1(long,long,long)
org.opencv.imgproc.Imgproc: double pointPolygonTest_0(long,double,double,boolean)
org.opencv.imgproc.Imgproc: void preCornerDetect_0(long,long,int,int)
org.opencv.imgproc.Imgproc: void preCornerDetect_1(long,long,int)
org.opencv.imgproc.Imgproc: void pyrDown_0(long,long,double,double,int)
org.opencv.imgproc.Imgproc: void pyrDown_1(long,long,double,double)
org.opencv.imgproc.Imgproc: void pyrDown_2(long,long)
org.opencv.imgproc.Imgproc: void pyrMeanShiftFiltering_0(long,long,double,double,int,int,int,double)
org.opencv.imgproc.Imgproc: void pyrMeanShiftFiltering_1(long,long,double,double)
org.opencv.imgproc.Imgproc: void pyrUp_0(long,long,double,double,int)
org.opencv.imgproc.Imgproc: void pyrUp_1(long,long,double,double)
org.opencv.imgproc.Imgproc: void pyrUp_2(long,long)
org.opencv.imgproc.Imgproc: void remap_0(long,long,long,long,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void remap_1(long,long,long,long,int)
org.opencv.imgproc.Imgproc: void resize_0(long,long,double,double,double,double,int)
org.opencv.imgproc.Imgproc: void resize_1(long,long,double,double)
org.opencv.imgproc.Imgproc: void sepFilter2D_0(long,long,int,long,long,double,double,double,int)
org.opencv.imgproc.Imgproc: void sepFilter2D_1(long,long,int,long,long,double,double,double)
org.opencv.imgproc.Imgproc: void sepFilter2D_2(long,long,int,long,long)
org.opencv.imgproc.Imgproc: double threshold_0(long,long,double,double,int)
org.opencv.imgproc.Imgproc: void undistort_0(long,long,long,long,long)
org.opencv.imgproc.Imgproc: void undistort_1(long,long,long,long)
org.opencv.imgproc.Imgproc: void undistortPoints_0(long,long,long,long,long,long)
org.opencv.imgproc.Imgproc: void undistortPoints_1(long,long,long,long)
org.opencv.imgproc.Imgproc: void warpAffine_0(long,long,long,double,double,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void warpAffine_1(long,long,long,double,double,int)
org.opencv.imgproc.Imgproc: void warpAffine_2(long,long,long,double,double)
org.opencv.imgproc.Imgproc: void warpPerspective_0(long,long,long,double,double,int,int,double,double,double,double)
org.opencv.imgproc.Imgproc: void warpPerspective_1(long,long,long,double,double,int)
org.opencv.imgproc.Imgproc: void warpPerspective_2(long,long,long,double,double)
org.opencv.imgproc.Imgproc: void watershed_0(long,long)
org.opencv.imgproc.Moments
org.opencv.imgproc.Moments: long Moments_0()
org.opencv.imgproc.Moments: double get_m00_0(long)
org.opencv.imgproc.Moments: void set_m00_0(long,double)
org.opencv.imgproc.Moments: double get_m10_0(long)
org.opencv.imgproc.Moments: void set_m10_0(long,double)
org.opencv.imgproc.Moments: double get_m01_0(long)
org.opencv.imgproc.Moments: void set_m01_0(long,double)
org.opencv.imgproc.Moments: double get_m20_0(long)
org.opencv.imgproc.Moments: void set_m20_0(long,double)
org.opencv.imgproc.Moments: double get_m11_0(long)
org.opencv.imgproc.Moments: void set_m11_0(long,double)
org.opencv.imgproc.Moments: double get_m02_0(long)
org.opencv.imgproc.Moments: void set_m02_0(long,double)
org.opencv.imgproc.Moments: double get_m30_0(long)
org.opencv.imgproc.Moments: void set_m30_0(long,double)
org.opencv.imgproc.Moments: double get_m21_0(long)
org.opencv.imgproc.Moments: void set_m21_0(long,double)
org.opencv.imgproc.Moments: double get_m12_0(long)
org.opencv.imgproc.Moments: void set_m12_0(long,double)
org.opencv.imgproc.Moments: double get_m03_0(long)
org.opencv.imgproc.Moments: void set_m03_0(long,double)
org.opencv.imgproc.Moments: double get_mu20_0(long)
org.opencv.imgproc.Moments: void set_mu20_0(long,double)
org.opencv.imgproc.Moments: double get_mu11_0(long)
org.opencv.imgproc.Moments: void set_mu11_0(long,double)
org.opencv.imgproc.Moments: double get_mu02_0(long)
org.opencv.imgproc.Moments: void set_mu02_0(long,double)
org.opencv.imgproc.Moments: double get_mu30_0(long)
org.opencv.imgproc.Moments: void set_mu30_0(long,double)
org.opencv.imgproc.Moments: double get_mu21_0(long)
org.opencv.imgproc.Moments: void set_mu21_0(long,double)
org.opencv.imgproc.Moments: double get_mu12_0(long)
org.opencv.imgproc.Moments: void set_mu12_0(long,double)
org.opencv.imgproc.Moments: double get_mu03_0(long)
org.opencv.imgproc.Moments: void set_mu03_0(long,double)
org.opencv.imgproc.Moments: double get_nu20_0(long)
org.opencv.imgproc.Moments: void set_nu20_0(long,double)
org.opencv.imgproc.Moments: double get_nu11_0(long)
org.opencv.imgproc.Moments: void set_nu11_0(long,double)
org.opencv.imgproc.Moments: double get_nu02_0(long)
org.opencv.imgproc.Moments: void set_nu02_0(long,double)
org.opencv.imgproc.Moments: double get_nu30_0(long)
org.opencv.imgproc.Moments: void set_nu30_0(long,double)
org.opencv.imgproc.Moments: double get_nu21_0(long)
org.opencv.imgproc.Moments: void set_nu21_0(long,double)
org.opencv.imgproc.Moments: double get_nu12_0(long)
org.opencv.imgproc.Moments: void set_nu12_0(long,double)
org.opencv.imgproc.Moments: double get_nu03_0(long)
org.opencv.imgproc.Moments: void set_nu03_0(long,double)
org.opencv.imgproc.Moments: void delete(long)
org.opencv.imgproc.Subdiv2D
org.opencv.imgproc.Subdiv2D: long Subdiv2D_0()
org.opencv.imgproc.Subdiv2D: long Subdiv2D_1(int,int,int,int)
org.opencv.imgproc.Subdiv2D: int edgeDst_0(long,int,double[])
org.opencv.imgproc.Subdiv2D: int edgeDst_1(long,int)
org.opencv.imgproc.Subdiv2D: int edgeOrg_0(long,int,double[])
org.opencv.imgproc.Subdiv2D: int edgeOrg_1(long,int)
org.opencv.imgproc.Subdiv2D: int findNearest_0(long,double,double,double[])
org.opencv.imgproc.Subdiv2D: int findNearest_1(long,double,double)
org.opencv.imgproc.Subdiv2D: int getEdge_0(long,int,int)
org.opencv.imgproc.Subdiv2D: void getEdgeList_0(long,long)
org.opencv.imgproc.Subdiv2D: void getTriangleList_0(long,long)
org.opencv.imgproc.Subdiv2D: double[] getVertex_0(long,int,double[])
org.opencv.imgproc.Subdiv2D: double[] getVertex_1(long,int)
org.opencv.imgproc.Subdiv2D: void getVoronoiFacetList_0(long,long,long,long)
org.opencv.imgproc.Subdiv2D: void initDelaunay_0(long,int,int,int,int)
org.opencv.imgproc.Subdiv2D: int insert_0(long,double,double)
org.opencv.imgproc.Subdiv2D: void insert_1(long,long)
org.opencv.imgproc.Subdiv2D: int locate_0(long,double,double,double[],double[])
org.opencv.imgproc.Subdiv2D: int nextEdge_0(long,int)
org.opencv.imgproc.Subdiv2D: int rotateEdge_0(long,int,int)
org.opencv.imgproc.Subdiv2D: int symEdge_0(long,int)
org.opencv.imgproc.Subdiv2D: void delete(long)
org.opencv.ml.CvANN_MLP
org.opencv.ml.CvANN_MLP: long CvANN_MLP_0()
org.opencv.ml.CvANN_MLP: long CvANN_MLP_1(long,int,double,double)
org.opencv.ml.CvANN_MLP: long CvANN_MLP_2(long)
org.opencv.ml.CvANN_MLP: void clear_0(long)
org.opencv.ml.CvANN_MLP: void create_0(long,long,int,double,double)
org.opencv.ml.CvANN_MLP: void create_1(long,long)
org.opencv.ml.CvANN_MLP: float predict_0(long,long,long)
org.opencv.ml.CvANN_MLP: int train_0(long,long,long,long,long,long,int)
org.opencv.ml.CvANN_MLP: int train_1(long,long,long,long)
org.opencv.ml.CvANN_MLP: void delete(long)
org.opencv.ml.CvANN_MLP_TrainParams
org.opencv.ml.CvANN_MLP_TrainParams: long CvANN_MLP_TrainParams_0()
org.opencv.ml.CvANN_MLP_TrainParams: double[] get_term_crit_0(long)
org.opencv.ml.CvANN_MLP_TrainParams: void set_term_crit_0(long,int,int,double)
org.opencv.ml.CvANN_MLP_TrainParams: int get_train_method_0(long)
org.opencv.ml.CvANN_MLP_TrainParams: void set_train_method_0(long,int)
org.opencv.ml.CvANN_MLP_TrainParams: double get_bp_dw_scale_0(long)
org.opencv.ml.CvANN_MLP_TrainParams: void set_bp_dw_scale_0(long,double)
org.opencv.ml.CvANN_MLP_TrainParams: double get_bp_moment_scale_0(long)
org.opencv.ml.CvANN_MLP_TrainParams: void set_bp_moment_scale_0(long,double)
org.opencv.ml.CvANN_MLP_TrainParams: double get_rp_dw0_0(long)
org.opencv.ml.CvANN_MLP_TrainParams: void set_rp_dw0_0(long,double)
org.opencv.ml.CvANN_MLP_TrainParams: double get_rp_dw_plus_0(long)
org.opencv.ml.CvANN_MLP_TrainParams: void set_rp_dw_plus_0(long,double)
org.opencv.ml.CvANN_MLP_TrainParams: double get_rp_dw_minus_0(long)
org.opencv.ml.CvANN_MLP_TrainParams: void set_rp_dw_minus_0(long,double)
org.opencv.ml.CvANN_MLP_TrainParams: double get_rp_dw_min_0(long)
org.opencv.ml.CvANN_MLP_TrainParams: void set_rp_dw_min_0(long,double)
org.opencv.ml.CvANN_MLP_TrainParams: double get_rp_dw_max_0(long)
org.opencv.ml.CvANN_MLP_TrainParams: void set_rp_dw_max_0(long,double)
org.opencv.ml.CvANN_MLP_TrainParams: void delete(long)
org.opencv.ml.CvBoost
org.opencv.ml.CvBoost: long CvBoost_0()
org.opencv.ml.CvBoost: long CvBoost_1(long,int,long,long,long,long,long,long)
org.opencv.ml.CvBoost: long CvBoost_2(long,int,long)
org.opencv.ml.CvBoost: void clear_0(long)
org.opencv.ml.CvBoost: float predict_0(long,long,long,int,int,boolean,boolean)
org.opencv.ml.CvBoost: float predict_1(long,long)
org.opencv.ml.CvBoost: void prune_0(long,int,int)
org.opencv.ml.CvBoost: boolean train_0(long,long,int,long,long,long,long,long,long,boolean)
org.opencv.ml.CvBoost: boolean train_1(long,long,int,long)
org.opencv.ml.CvBoost: void delete(long)
org.opencv.ml.CvBoostParams
org.opencv.ml.CvBoostParams: long CvBoostParams_0()
org.opencv.ml.CvBoostParams: int get_boost_type_0(long)
org.opencv.ml.CvBoostParams: void set_boost_type_0(long,int)
org.opencv.ml.CvBoostParams: int get_weak_count_0(long)
org.opencv.ml.CvBoostParams: void set_weak_count_0(long,int)
org.opencv.ml.CvBoostParams: int get_split_criteria_0(long)
org.opencv.ml.CvBoostParams: void set_split_criteria_0(long,int)
org.opencv.ml.CvBoostParams: double get_weight_trim_rate_0(long)
org.opencv.ml.CvBoostParams: void set_weight_trim_rate_0(long,double)
org.opencv.ml.CvBoostParams: void delete(long)
org.opencv.ml.CvDTree
org.opencv.ml.CvDTree: long CvDTree_0()
org.opencv.ml.CvDTree: void clear_0(long)
org.opencv.ml.CvDTree: long getVarImportance_0(long)
org.opencv.ml.CvDTree: boolean train_0(long,long,int,long,long,long,long,long,long)
org.opencv.ml.CvDTree: boolean train_1(long,long,int,long)
org.opencv.ml.CvDTree: void delete(long)
org.opencv.ml.CvDTreeParams
org.opencv.ml.CvDTreeParams: long CvDTreeParams_0()
org.opencv.ml.CvDTreeParams: int get_max_categories_0(long)
org.opencv.ml.CvDTreeParams: void set_max_categories_0(long,int)
org.opencv.ml.CvDTreeParams: int get_max_depth_0(long)
org.opencv.ml.CvDTreeParams: void set_max_depth_0(long,int)
org.opencv.ml.CvDTreeParams: int get_min_sample_count_0(long)
org.opencv.ml.CvDTreeParams: void set_min_sample_count_0(long,int)
org.opencv.ml.CvDTreeParams: int get_cv_folds_0(long)
org.opencv.ml.CvDTreeParams: void set_cv_folds_0(long,int)
org.opencv.ml.CvDTreeParams: boolean get_use_surrogates_0(long)
org.opencv.ml.CvDTreeParams: void set_use_surrogates_0(long,boolean)
org.opencv.ml.CvDTreeParams: boolean get_use_1se_rule_0(long)
org.opencv.ml.CvDTreeParams: void set_use_1se_rule_0(long,boolean)
org.opencv.ml.CvDTreeParams: boolean get_truncate_pruned_tree_0(long)
org.opencv.ml.CvDTreeParams: void set_truncate_pruned_tree_0(long,boolean)
org.opencv.ml.CvDTreeParams: float get_regression_accuracy_0(long)
org.opencv.ml.CvDTreeParams: void set_regression_accuracy_0(long,float)
org.opencv.ml.CvDTreeParams: void delete(long)
org.opencv.ml.CvERTrees
org.opencv.ml.CvERTrees: long CvERTrees_0()
org.opencv.ml.CvERTrees: boolean train_0(long,long,int,long,long,long,long,long,long)
org.opencv.ml.CvERTrees: boolean train_1(long,long,int,long)
org.opencv.ml.CvERTrees: void delete(long)
org.opencv.ml.CvGBTrees
org.opencv.ml.CvGBTrees: long CvGBTrees_0()
org.opencv.ml.CvGBTrees: long CvGBTrees_1(long,int,long,long,long,long,long,long)
org.opencv.ml.CvGBTrees: long CvGBTrees_2(long,int,long)
org.opencv.ml.CvGBTrees: void clear_0(long)
org.opencv.ml.CvGBTrees: float predict_0(long,long,long,int,int,int)
org.opencv.ml.CvGBTrees: float predict_1(long,long)
org.opencv.ml.CvGBTrees: boolean train_0(long,long,int,long,long,long,long,long,long,boolean)
org.opencv.ml.CvGBTrees: boolean train_1(long,long,int,long)
org.opencv.ml.CvGBTrees: void delete(long)
org.opencv.ml.CvGBTreesParams
org.opencv.ml.CvGBTreesParams: long CvGBTreesParams_0()
org.opencv.ml.CvGBTreesParams: int get_weak_count_0(long)
org.opencv.ml.CvGBTreesParams: void set_weak_count_0(long,int)
org.opencv.ml.CvGBTreesParams: int get_loss_function_type_0(long)
org.opencv.ml.CvGBTreesParams: void set_loss_function_type_0(long,int)
org.opencv.ml.CvGBTreesParams: float get_subsample_portion_0(long)
org.opencv.ml.CvGBTreesParams: void set_subsample_portion_0(long,float)
org.opencv.ml.CvGBTreesParams: float get_shrinkage_0(long)
org.opencv.ml.CvGBTreesParams: void set_shrinkage_0(long,float)
org.opencv.ml.CvGBTreesParams: void delete(long)
org.opencv.ml.CvKNearest
org.opencv.ml.CvKNearest: long CvKNearest_0()
org.opencv.ml.CvKNearest: long CvKNearest_1(long,long,long,boolean,int)
org.opencv.ml.CvKNearest: long CvKNearest_2(long,long)
org.opencv.ml.CvKNearest: float find_nearest_0(long,long,int,long,long,long)
org.opencv.ml.CvKNearest: boolean train_0(long,long,long,long,boolean,int,boolean)
org.opencv.ml.CvKNearest: boolean train_1(long,long,long)
org.opencv.ml.CvKNearest: void delete(long)
org.opencv.ml.CvNormalBayesClassifier
org.opencv.ml.CvNormalBayesClassifier: long CvNormalBayesClassifier_0()
org.opencv.ml.CvNormalBayesClassifier: long CvNormalBayesClassifier_1(long,long,long,long)
org.opencv.ml.CvNormalBayesClassifier: long CvNormalBayesClassifier_2(long,long)
org.opencv.ml.CvNormalBayesClassifier: void clear_0(long)
org.opencv.ml.CvNormalBayesClassifier: float predict_0(long,long,long)
org.opencv.ml.CvNormalBayesClassifier: float predict_1(long,long)
org.opencv.ml.CvNormalBayesClassifier: boolean train_0(long,long,long,long,long,boolean)
org.opencv.ml.CvNormalBayesClassifier: boolean train_1(long,long,long)
org.opencv.ml.CvNormalBayesClassifier: void delete(long)
org.opencv.ml.CvParamGrid
org.opencv.ml.CvParamGrid: long CvParamGrid_0()
org.opencv.ml.CvParamGrid: double get_min_val_0(long)
org.opencv.ml.CvParamGrid: void set_min_val_0(long,double)
org.opencv.ml.CvParamGrid: double get_max_val_0(long)
org.opencv.ml.CvParamGrid: void set_max_val_0(long,double)
org.opencv.ml.CvParamGrid: double get_step_0(long)
org.opencv.ml.CvParamGrid: void set_step_0(long,double)
org.opencv.ml.CvParamGrid: void delete(long)
org.opencv.ml.CvRTParams
org.opencv.ml.CvRTParams: long CvRTParams_0()
org.opencv.ml.CvRTParams: boolean get_calc_var_importance_0(long)
org.opencv.ml.CvRTParams: void set_calc_var_importance_0(long,boolean)
org.opencv.ml.CvRTParams: int get_nactive_vars_0(long)
org.opencv.ml.CvRTParams: void set_nactive_vars_0(long,int)
org.opencv.ml.CvRTParams: double[] get_term_crit_0(long)
org.opencv.ml.CvRTParams: void set_term_crit_0(long,int,int,double)
org.opencv.ml.CvRTParams: void delete(long)
org.opencv.ml.CvRTrees
org.opencv.ml.CvRTrees: long CvRTrees_0()
org.opencv.ml.CvRTrees: void clear_0(long)
org.opencv.ml.CvRTrees: long getVarImportance_0(long)
org.opencv.ml.CvRTrees: float predict_0(long,long,long)
org.opencv.ml.CvRTrees: float predict_1(long,long)
org.opencv.ml.CvRTrees: float predict_prob_0(long,long,long)
org.opencv.ml.CvRTrees: float predict_prob_1(long,long)
org.opencv.ml.CvRTrees: boolean train_0(long,long,int,long,long,long,long,long,long)
org.opencv.ml.CvRTrees: boolean train_1(long,long,int,long)
org.opencv.ml.CvRTrees: void delete(long)
org.opencv.ml.CvSVM
org.opencv.ml.CvSVM: long CvSVM_0()
org.opencv.ml.CvSVM: long CvSVM_1(long,long,long,long,long)
org.opencv.ml.CvSVM: long CvSVM_2(long,long)
org.opencv.ml.CvSVM: void clear_0(long)
org.opencv.ml.CvSVM: int get_support_vector_count_0(long)
org.opencv.ml.CvSVM: int get_var_count_0(long)
org.opencv.ml.CvSVM: float predict_0(long,long,boolean)
org.opencv.ml.CvSVM: float predict_1(long,long)
org.opencv.ml.CvSVM: void predict_all_0(long,long,long)
org.opencv.ml.CvSVM: boolean train_0(long,long,long,long,long,long)
org.opencv.ml.CvSVM: boolean train_1(long,long,long)
org.opencv.ml.CvSVM: boolean train_auto_0(long,long,long,long,long,long,int,long,long,long,long,long,long,boolean)
org.opencv.ml.CvSVM: boolean train_auto_1(long,long,long,long,long,long)
org.opencv.ml.CvSVM: void delete(long)
org.opencv.ml.CvSVMParams
org.opencv.ml.CvSVMParams: long CvSVMParams_0()
org.opencv.ml.CvSVMParams: int get_svm_type_0(long)
org.opencv.ml.CvSVMParams: void set_svm_type_0(long,int)
org.opencv.ml.CvSVMParams: int get_kernel_type_0(long)
org.opencv.ml.CvSVMParams: void set_kernel_type_0(long,int)
org.opencv.ml.CvSVMParams: double get_degree_0(long)
org.opencv.ml.CvSVMParams: void set_degree_0(long,double)
org.opencv.ml.CvSVMParams: double get_gamma_0(long)
org.opencv.ml.CvSVMParams: void set_gamma_0(long,double)
org.opencv.ml.CvSVMParams: double get_coef0_0(long)
org.opencv.ml.CvSVMParams: void set_coef0_0(long,double)
org.opencv.ml.CvSVMParams: double get_C_0(long)
org.opencv.ml.CvSVMParams: void set_C_0(long,double)
org.opencv.ml.CvSVMParams: double get_nu_0(long)
org.opencv.ml.CvSVMParams: void set_nu_0(long,double)
org.opencv.ml.CvSVMParams: double get_p_0(long)
org.opencv.ml.CvSVMParams: void set_p_0(long,double)
org.opencv.ml.CvSVMParams: double[] get_term_crit_0(long)
org.opencv.ml.CvSVMParams: void set_term_crit_0(long,int,int,double)
org.opencv.ml.CvSVMParams: void delete(long)
org.opencv.ml.CvStatModel
org.opencv.ml.CvStatModel: void load_0(long,java.lang.String,java.lang.String)
org.opencv.ml.CvStatModel: void load_1(long,java.lang.String)
org.opencv.ml.CvStatModel: void save_0(long,java.lang.String,java.lang.String)
org.opencv.ml.CvStatModel: void save_1(long,java.lang.String)
org.opencv.ml.CvStatModel: void delete(long)
org.opencv.ml.EM
org.opencv.ml.EM: long EM_0(int,int,int,int,double)
org.opencv.ml.EM: long EM_1()
org.opencv.ml.EM: void clear_0(long)
org.opencv.ml.EM: boolean isTrained_0(long)
org.opencv.ml.EM: double[] predict_0(long,long,long)
org.opencv.ml.EM: double[] predict_1(long,long)
org.opencv.ml.EM: boolean train_0(long,long,long,long,long)
org.opencv.ml.EM: boolean train_1(long,long)
org.opencv.ml.EM: boolean trainE_0(long,long,long,long,long,long,long,long)
org.opencv.ml.EM: boolean trainE_1(long,long,long)
org.opencv.ml.EM: boolean trainM_0(long,long,long,long,long,long)
org.opencv.ml.EM: boolean trainM_1(long,long,long)
org.opencv.ml.EM: void delete(long)
org.opencv.objdetect.CascadeClassifier
org.opencv.objdetect.CascadeClassifier: long CascadeClassifier_0()
org.opencv.objdetect.CascadeClassifier: long CascadeClassifier_1(java.lang.String)
org.opencv.objdetect.CascadeClassifier: void detectMultiScale_0(long,long,long,double,int,int,double,double,double,double)
org.opencv.objdetect.CascadeClassifier: void detectMultiScale_1(long,long,long)
org.opencv.objdetect.CascadeClassifier: void detectMultiScale_2(long,long,long,long,long,double,int,int,double,double,double,double,boolean)
org.opencv.objdetect.CascadeClassifier: void detectMultiScale_3(long,long,long,long,long)
org.opencv.objdetect.CascadeClassifier: boolean empty_0(long)
org.opencv.objdetect.CascadeClassifier: boolean load_0(long,java.lang.String)
org.opencv.objdetect.CascadeClassifier: void delete(long)
org.opencv.objdetect.HOGDescriptor
org.opencv.objdetect.HOGDescriptor: long HOGDescriptor_0()
org.opencv.objdetect.HOGDescriptor: long HOGDescriptor_1(double,double,double,double,double,double,double,double,int,int,double,int,double,boolean,int)
org.opencv.objdetect.HOGDescriptor: long HOGDescriptor_2(double,double,double,double,double,double,double,double,int)
org.opencv.objdetect.HOGDescriptor: long HOGDescriptor_3(java.lang.String)
org.opencv.objdetect.HOGDescriptor: boolean checkDetectorSize_0(long)
org.opencv.objdetect.HOGDescriptor: void compute_0(long,long,long,double,double,double,double,long)
org.opencv.objdetect.HOGDescriptor: void compute_1(long,long,long)
org.opencv.objdetect.HOGDescriptor: void computeGradient_0(long,long,long,long,double,double,double,double)
org.opencv.objdetect.HOGDescriptor: void computeGradient_1(long,long,long,long)
org.opencv.objdetect.HOGDescriptor: void detect_0(long,long,long,long,double,double,double,double,double,long)
org.opencv.objdetect.HOGDescriptor: void detect_1(long,long,long,long)
org.opencv.objdetect.HOGDescriptor: void detectMultiScale_0(long,long,long,long,double,double,double,double,double,double,double,boolean)
org.opencv.objdetect.HOGDescriptor: void detectMultiScale_1(long,long,long,long)
org.opencv.objdetect.HOGDescriptor: long getDaimlerPeopleDetector_0()
org.opencv.objdetect.HOGDescriptor: long getDefaultPeopleDetector_0()
org.opencv.objdetect.HOGDescriptor: long getDescriptorSize_0(long)
org.opencv.objdetect.HOGDescriptor: double getWinSigma_0(long)
org.opencv.objdetect.HOGDescriptor: boolean load_0(long,java.lang.String,java.lang.String)
org.opencv.objdetect.HOGDescriptor: boolean load_1(long,java.lang.String)
org.opencv.objdetect.HOGDescriptor: void save_0(long,java.lang.String,java.lang.String)
org.opencv.objdetect.HOGDescriptor: void save_1(long,java.lang.String)
org.opencv.objdetect.HOGDescriptor: void setSVMDetector_0(long,long)
org.opencv.objdetect.HOGDescriptor: double[] get_winSize_0(long)
org.opencv.objdetect.HOGDescriptor: double[] get_blockSize_0(long)
org.opencv.objdetect.HOGDescriptor: double[] get_blockStride_0(long)
org.opencv.objdetect.HOGDescriptor: double[] get_cellSize_0(long)
org.opencv.objdetect.HOGDescriptor: int get_nbins_0(long)
org.opencv.objdetect.HOGDescriptor: int get_derivAperture_0(long)
org.opencv.objdetect.HOGDescriptor: double get_winSigma_0(long)
org.opencv.objdetect.HOGDescriptor: int get_histogramNormType_0(long)
org.opencv.objdetect.HOGDescriptor: double get_L2HysThreshold_0(long)
org.opencv.objdetect.HOGDescriptor: boolean get_gammaCorrection_0(long)
org.opencv.objdetect.HOGDescriptor: long get_svmDetector_0(long)
org.opencv.objdetect.HOGDescriptor: int get_nlevels_0(long)
org.opencv.objdetect.HOGDescriptor: void delete(long)
org.opencv.objdetect.Objdetect
org.opencv.objdetect.Objdetect: void groupRectangles_0(long,long,int,double)
org.opencv.objdetect.Objdetect: void groupRectangles_1(long,long,int)
org.opencv.photo.Photo
org.opencv.photo.Photo: void fastNlMeansDenoising_0(long,long,float,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoising_1(long,long)
org.opencv.photo.Photo: void fastNlMeansDenoisingColored_0(long,long,float,float,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoisingColored_1(long,long)
org.opencv.photo.Photo: void fastNlMeansDenoisingColoredMulti_0(long,long,int,int,float,float,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoisingColoredMulti_1(long,long,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoisingMulti_0(long,long,int,int,float,int,int)
org.opencv.photo.Photo: void fastNlMeansDenoisingMulti_1(long,long,int,int)
org.opencv.photo.Photo: void inpaint_0(long,long,long,double,int)
org.opencv.video.BackgroundSubtractor
org.opencv.video.BackgroundSubtractor: void apply_0(long,long,long,double)
org.opencv.video.BackgroundSubtractor: void apply_1(long,long,long)
org.opencv.video.BackgroundSubtractor: void delete(long)
org.opencv.video.BackgroundSubtractorMOG
org.opencv.video.BackgroundSubtractorMOG: long BackgroundSubtractorMOG_0()
org.opencv.video.BackgroundSubtractorMOG: long BackgroundSubtractorMOG_1(int,int,double,double)
org.opencv.video.BackgroundSubtractorMOG: long BackgroundSubtractorMOG_2(int,int,double)
org.opencv.video.BackgroundSubtractorMOG: void delete(long)
org.opencv.video.BackgroundSubtractorMOG2
org.opencv.video.BackgroundSubtractorMOG2: long BackgroundSubtractorMOG2_0()
org.opencv.video.BackgroundSubtractorMOG2: long BackgroundSubtractorMOG2_1(int,float,boolean)
org.opencv.video.BackgroundSubtractorMOG2: long BackgroundSubtractorMOG2_2(int,float)
org.opencv.video.BackgroundSubtractorMOG2: void delete(long)
org.opencv.video.KalmanFilter
org.opencv.video.KalmanFilter: long KalmanFilter_0()
org.opencv.video.KalmanFilter: long KalmanFilter_1(int,int,int,int)
org.opencv.video.KalmanFilter: long KalmanFilter_2(int,int)
org.opencv.video.KalmanFilter: long correct_0(long,long)
org.opencv.video.KalmanFilter: long predict_0(long,long)
org.opencv.video.KalmanFilter: long predict_1(long)
org.opencv.video.KalmanFilter: void delete(long)
org.opencv.video.Video
org.opencv.video.Video: double[] CamShift_0(long,int,int,int,int,double[],int,int,double)
org.opencv.video.Video: int buildOpticalFlowPyramid_0(long,long,double,double,int,boolean,int,int,boolean)
org.opencv.video.Video: int buildOpticalFlowPyramid_1(long,long,double,double,int)
org.opencv.video.Video: double calcGlobalOrientation_0(long,long,long,double,double)
org.opencv.video.Video: void calcMotionGradient_0(long,long,long,double,double,int)
org.opencv.video.Video: void calcMotionGradient_1(long,long,long,double,double)
org.opencv.video.Video: void calcOpticalFlowFarneback_0(long,long,long,double,int,int,int,int,double,int)
org.opencv.video.Video: void calcOpticalFlowPyrLK_0(long,long,long,long,long,long,double,double,int,int,int,double,int,double)
org.opencv.video.Video: void calcOpticalFlowPyrLK_1(long,long,long,long,long,long,double,double,int)
org.opencv.video.Video: void calcOpticalFlowPyrLK_2(long,long,long,long,long,long)
org.opencv.video.Video: void calcOpticalFlowSF_0(long,long,long,int,int,int)
org.opencv.video.Video: void calcOpticalFlowSF_1(long,long,long,int,int,int,double,double,int,double,double,double,int,double,double,double)
org.opencv.video.Video: long estimateRigidTransform_0(long,long,boolean)
org.opencv.video.Video: int meanShift_0(long,int,int,int,int,double[],int,int,double)
org.opencv.video.Video: void segmentMotion_0(long,long,long,double,double)
org.opencv.video.Video: void updateMotionHistory_0(long,long,double,double)
